[{"E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\index.js":"1","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\reportWebVitals.js":"2","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\App.js":"3","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\reducers\\userReducer.js":"4","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screens\\Signin.js":"5","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\Navbar.js":"6","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screens\\Home.js":"7","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screens\\Signup.js":"8","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screens\\CreatePost.js":"9","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screens\\UserProfile.js":"10","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screens\\FollowingPost.js":"11","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screens\\Profile.js":"12","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screenComponents\\left.js":"13","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screenComponents\\right.js":"14","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screenComponents\\filter.js":"15"},{"size":517,"mtime":1609145712173,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1609145712177,"results":"18","hashOfConfig":"17"},{"size":2071,"mtime":1610205505705,"results":"19","hashOfConfig":"17"},{"size":518,"mtime":1609308758506,"results":"20","hashOfConfig":"17"},{"size":3078,"mtime":1610205505814,"results":"21","hashOfConfig":"17"},{"size":6172,"mtime":1610277379583,"results":"22","hashOfConfig":"17"},{"size":7499,"mtime":1610288733216,"results":"23","hashOfConfig":"17"},{"size":3643,"mtime":1610205505820,"results":"24","hashOfConfig":"17"},{"size":3409,"mtime":1610205505731,"results":"25","hashOfConfig":"17"},{"size":9714,"mtime":1610288733214,"results":"26","hashOfConfig":"17"},{"size":7431,"mtime":1610288733215,"results":"27","hashOfConfig":"17"},{"size":8858,"mtime":1610288733215,"results":"28","hashOfConfig":"17"},{"size":2336,"mtime":1610277418361,"results":"29","hashOfConfig":"17"},{"size":2160,"mtime":1610277445092,"results":"30","hashOfConfig":"17"},{"size":1074,"mtime":1610205505717,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"16s0rka",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"34"},"E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\index.js",[],["72","73"],"E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\reportWebVitals.js",[],"E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\App.js",["74","75"],"import \"./App.css\";\r\nimport NavBar from \"./components/Navbar\";\r\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport Home from \"./components/screens/Home\";\r\nimport Signin from \"./components/screens/Signin\";\r\nimport Profile from \"./components/screens/Profile\";\r\nimport Signup from \"./components/screens/Signup\";\r\nimport UserProfile from \"./components/screens/UserProfile\";\r\nimport CreatePost from \"./components/screens/CreatePost\";\r\nimport FollowingPost from \"./components/screens/FollowingPost\";\r\nimport React, { useEffect, createContext, useReducer, useContext } from \"react\";\r\nimport { reducer, initialState } from \"./reducers/userReducer\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst Routing = () => {\r\n  const history = useHistory();\r\n  const { state, dispatch } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    if (user) {\r\n      //Signed in\r\n      dispatch({ type: \"USER\", payload: user });\r\n    } else {\r\n      //Not signed in\r\n      history.push(\"/signin\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Switch style={{marginTop:\"70px\", paddingTop:\"70px\"}}>\r\n      <Route exact path=\"/\" >\r\n        <Home />\r\n      </Route>\r\n\r\n      <Route path=\"/signin\">\r\n        <Signin />\r\n      </Route>\r\n\r\n      <Route path=\"/signup\">\r\n        <Signup />\r\n      </Route>\r\n\r\n      <Route path=\"/profile/:userid\">\r\n        <UserProfile />\r\n      </Route>\r\n\r\n      <Route exact path=\"/profile\">\r\n        <Profile />\r\n      </Route>\r\n\r\n      <Route path=\"/create\">\r\n        <CreatePost />\r\n      </Route>\r\n\r\n      <Route path=\"/followingPost\">\r\n        <FollowingPost />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ state, dispatch }}>\r\n      <BrowserRouter>\r\n        <NavBar/>\r\n        <div style={{paddingTop:\"68px\"}}>\r\n          <Routing/>\r\n        </div>\r\n      </BrowserRouter>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\reducers\\userReducer.js",["76","77","78","79"],"export const initialState = null;\r\n\r\nexport const reducer = (state, action) => {\r\n  if (action.type == \"USER\") {\r\n    return action.payload;\r\n  }\r\n  if (action.type == \"CLEAR\") {\r\n    //On logout\r\n    return null;\r\n  }\r\n  if (action.type == \"UPDATE\") {\r\n    return {\r\n      ...state,\r\n      followers: action.payload.followers,\r\n      following: action.payload.following\r\n    };\r\n  }\r\n  if (action.type == \"UPDATEPIC\") {\r\n    return {\r\n      ...state,\r\n      pic: action.payload.pic\r\n    };\r\n  }\r\n  return state;\r\n};\r\n","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screens\\Signin.js",["80","81"],"import React, {useState, useContext} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Signin = ()=>{\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const PostData = () => {\r\n        if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)){\r\n            M.toast({html: \"Invalid email\"})\r\n            return\r\n        }\r\n        fetch(\"/signin\",{\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n            if(data.error){\r\n                M.toast({html: data.error})\r\n            }\r\n            else{   //Success\r\n                //Store local data\r\n                localStorage.setItem(\"jwt\", data.token) //JWT: Java web token\r\n                localStorage.setItem(\"user\", JSON.stringify(data.user))\r\n                localStorage.setItem(\"type\", data._type)\r\n\r\n                \r\n                localStorage.setItem(\"followingNames\", data.followingNames)\r\n                \r\n                var sad = localStorage.getItem(\"followingNames\").split(',')\r\n                localStorage.setItem(\"followingNames\", sad)\r\n                dispatch({type:\"USER\", payload:data.user})\r\n\r\n\r\n                M.toast({html:\"Signed in successfully!\"})\r\n                history.push('/')\r\n            }\r\n            console.log(data)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"parentCard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <img src=\"/images/USMForum.svg\" style={{height:\"300px\"}}/>\r\n                \r\n                \r\n                {/* \r\n                <h2 style={{\r\n                    fontFamily:\"'Libre Baskerville', serif\"\r\n                }}>USMForum</h2>\r\n                */}\r\n                \r\n                <input type=\"text\" \r\n                placeholder=\"email\"\r\n                value={email}\r\n                onChange={\r\n                    (e)=>setEmail(e.target.value)\r\n                }/>\r\n                \r\n\r\n                <input type=\"password\" \r\n                placeholder=\"password\"\r\n                value={password}\r\n                onChange={\r\n                    (e)=>setPassword(e.target.value)\r\n                }/>\r\n\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\"\r\n                onClick={()=>PostData()}\r\n                >\r\n                    Sign in\r\n                </button>\r\n\r\n                <h6>\r\n                    <Link to=\"/signup\">Don't have an account?</Link>\r\n                </h6>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\Navbar.js",["82","83","84","85"],"E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screens\\Home.js",["86","87","88","89","90","91","92","93","94","95"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport CreatePost from \"./CreatePost\";\r\nimport Left from \"../screenComponents/left.js\";\r\nimport Right from \"../screenComponents/right.js\";\r\nimport M from \"materialize-css\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const { state, dispatch } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/allpost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        setData(result.posts);\r\n      });\r\n  }, []);\r\n\r\n  const likePost = id => {\r\n    fetch(\"/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        const newData = data.map(item => {\r\n          console.log(item);\r\n          if (item._id == result._id) {\r\n            console.log(result);\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const unlikePost = id => {\r\n    fetch(\"/unlike\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        const newData = data.map(item => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const makeComment = (text, postId) => {\r\n    fetch(\"/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        postId,\r\n        text\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        const newData = data.map(item => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deletePost = postid => {\r\n    fetch(`/deletepost/${postid}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        const newData = data.filter(item => {\r\n          return item._id !== result._id;\r\n        });\r\n        setData(newData);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <Left />\r\n\r\n      <div\r\n        className=\"home\"\r\n        style={{\r\n          flexGrow: \"1\",\r\n          width: \"70%\"\r\n        }}\r\n      >\r\n        {localStorage.getItem(\"type\") == \"admin\" ? <CreatePost /> : <div />}\r\n\r\n        <h4 className=\"home-card\">All posts</h4>\r\n\r\n        {data.map(item => {\r\n          return (\r\n            <div className=\"card home-card\" key={item._id}>\r\n              <h5\r\n                style={{\r\n                  padding: \"24px\"\r\n                }}\r\n              >\r\n                <Link\r\n                  to={\r\n                    item.postedBy._id !== state._id\r\n                      ? \"/profile/\" + item.postedBy._id\r\n                      : \"/profile\"\r\n                  }\r\n                >\r\n                  {item.postedBy.name}\r\n                </Link>{\" \"}\r\n                {item.postedBy._id == state._id && (\r\n                  <i\r\n                    className=\"material-icons\"\r\n                    style={{\r\n                      float: \"right\"\r\n                    }}\r\n                    onClick={() => deletePost(item._id)}\r\n                  >\r\n                    delete\r\n                  </i>\r\n                )}\r\n              </h5>\r\n\r\n              <div className=\"card-image\">\r\n                {item.photo != \"\" && item.photo != \"No photo\" ? (\r\n                  <img src={item.photo} />\r\n                ) : (\r\n                  <div style={{ marginTop: -20 }} />\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"card-content\">\r\n                {/* \r\n              <i className=\"material-icons\" style={{ color: \"#64b5f6\" }}>\r\n                favorite\r\n              </i>\r\n              */}\r\n                <h6\r\n                  style={{\r\n                    fontWeight: \"bold\"\r\n                  }}\r\n                >\r\n                  {item.title}\r\n                </h6>\r\n                <p>{item.body}</p>\r\n\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"10px\"\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {/* Likes displayer */}\r\n                  {item.likes.includes(state._id) ? (\r\n                    <i\r\n                      className=\"material-icons\"\r\n                      onClick={() => {\r\n                        unlikePost(item._id);\r\n                      }}\r\n                      style={{\r\n                        color: \"#64b5f6\"\r\n                      }}\r\n                    >\r\n                      thumb_up\r\n                    </i>\r\n                  ) : (\r\n                    <i\r\n                      className=\"material-icons\"\r\n                      onClick={() => {\r\n                        likePost(item._id);\r\n                      }}\r\n                    >\r\n                      thumb_up\r\n                    </i>\r\n                  )}\r\n                  <h6\r\n                    style={{\r\n                      margin: \"0px 0px 0px 15px\"\r\n                    }}\r\n                  >\r\n                    {item.likes.length} likes\r\n                  </h6>\r\n                </div>\r\n\r\n                {item.comments.map(record => {\r\n                  return (\r\n                    <h6 key={record._id}>\r\n                      <span style={{ fontWeight: 500 }}>\r\n                        {record.postedBy.name}\r\n                      </span>{\" \"}\r\n                      {console.log(record.postedBy)}\r\n                      {record.text}\r\n                    </h6>\r\n                  );\r\n                })}\r\n                <form\r\n                  id=\"comment\"\r\n                  onSubmit={e => {\r\n                    e.preventDefault();\r\n                    makeComment(e.target[0].value, item._id);\r\n                    e.target[0].value = \"\";\r\n                    M.toast({ html: \"Comment posted\" });\r\n                  }}\r\n                >\r\n                  <input\r\n                    id=\"comment_input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Add a comment\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <Right />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screens\\Signup.js",["96","97","98","99"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\n\r\nconst Signup = () => {\r\n  const history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [url, setUrl] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      uploadFields();\r\n    }\r\n  }, [url]);\r\n\r\n  const uploadPic = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"usmforum\");\r\n    data.append(\"clooud_name\", \"dfoc7c90v\");\r\n    fetch(\"https://api.cloudinary.com/v1_1/dfoc7c90v/image/upload\", {\r\n      method: \"post\",\r\n      body: data\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setUrl(data.url);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const uploadFields = () => {\r\n    if (\r\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n        email\r\n      )\r\n    ) {\r\n      M.toast({ html: \"invalid email\", classes: \"#c62828 red darken-3\" });\r\n      return;\r\n    }\r\n    fetch(\"/signup\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        password,\r\n        email,\r\n        pic: url\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.error) {\r\n          M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\r\n        } else {\r\n          M.toast({ html: data.message, classes: \"#43a047 green darken-1\" });\r\n          history.push(\"/signin\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const PostData = () => {\r\n    if (image) {\r\n      uploadPic();\r\n    } else {\r\n      uploadFields();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"parentCard\">\r\n      <div className=\"card auth-card input-field\">\r\n      <img src=\"/images/USMForum.svg\" style={{height:\"300px\"}}/>\r\n                \r\n                \r\n                {/* \r\n                <h2 style={{\r\n                    fontFamily:\"'Libre Baskerville', serif\"\r\n                }}>USMForum</h2>\r\n                */}\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"username\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n        ></input>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <div className=\"file-field input-field\">\r\n          <div className=\"btn #64b5f6 blue darken-1\">\r\n            <span>Upload pic</span>\r\n            <input type=\"file\" onChange={e => setImage(e.target.files[0])} />\r\n          </div>\r\n          <div className=\"file-path-wrapper\">\r\n            <input className=\"file-path validate\" type=\"text\" />\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n          onClick={() => PostData()}\r\n        >\r\n          Sign up\r\n        </button>\r\n\r\n        <h6>\r\n          <Link to=\"/signin\">Already have an account?</Link>\r\n        </h6>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screens\\CreatePost.js",["100","101"],"import React, {useState, useEffect} from 'react'\r\nimport M from 'materialize-css'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst CreatePost = () =>{\r\n    const history = useHistory()\r\n    const [title, setTitle] = useState(\"\")\r\n    const [body, setBody] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(\"\")\r\n    \r\n    useEffect(()=>{ //callback to run code after url is set\r\n        if(url){\r\n            fetch(\"/createpost\",{\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic:url\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n                if(data.error){\r\n                    M.toast({html: data.error})\r\n                }\r\n                else{   //Success\r\n                    M.toast({html:\"Created post successfully!\"})\r\n                    history.push('/')\r\n                }\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n    }, [url])\r\n\r\n    const postDetails = () =>{\r\n        if(image != \"\"){\r\n            const data = new FormData()\r\n            data.append(\"file\", image)\r\n            data.append(\"upload_preset\", \"usmforum\")\r\n            data.append(\"cloud_name\", \"dfoc7c90v\")\r\n            \r\n            fetch(\"https://api.cloudinary.com/v1_1/dfoc7c90v/image/upload\", {\r\n                method:\"post\",\r\n                body: data\r\n            })\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                console.log(url)\r\n                setUrl(data.url)\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n        else{\r\n            setUrl(\"No photo\")\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"card input-filed\"\r\n        style={{\r\n            margin:\"30px auto\",\r\n            width:\"700px\",\r\n            maxWidth:\"80%\",\r\n            padding:\"20px\",\r\n            textAlign:\"center\"\r\n        }}\r\n        >\r\n            <input type=\"text\" \r\n                placeholder=\"Title\"\r\n                value={title}\r\n                onChange={\r\n                    (e)=>setTitle(e.target.value)\r\n            }/>\r\n            <input type=\"text\" \r\n                placeholder=\"Body\"\r\n                value={body}\r\n                onChange={\r\n                    (e)=>setBody(e.target.value)\r\n            }/>\r\n\r\n\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\">\r\n                    <span>Attachment</span>\r\n                    <input type=\"file\"\r\n                    onChange={(e)=> setImage(e.target.files[0])}\r\n                    />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\"\r\n            onClick={()=>postDetails()}\r\n            >\r\n                Post\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screens\\UserProfile.js",["102","103","104","105","106","107","108","109"],"import React, { useEffect, useState, useContext, useCallback } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst UserProfile = () => {\r\n  const [userProfile, setProfile] = useState(null);\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const { userid } = useParams();\r\n  const [showfollow, setShowFollow] = useState(\r\n    state ? !state.following.includes(userid) : true\r\n  );\r\n  useEffect(() => {\r\n    fetch(`/user/${userid}`, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        setProfile(result);\r\n      });\r\n  }, []);\r\n\r\n  const followUser = () => {\r\n    console.log(userid);\r\n    fetch(\"/follow\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        followId: userid,\r\n        followName: userProfile.user.name\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        dispatch({\r\n          type: \"UPDATE\",\r\n          payload: { following: data.following, followers: data.followers }\r\n        });\r\n        localStorage.setItem(\"user\", JSON.stringify(data));\r\n        dispatch({\r\n          type: \"UPDATE\",\r\n          payload: { following: data.following, followers: data.followers }\r\n        });\r\n        localStorage.setItem(\"user\", JSON.stringify(data));\r\n        setProfile(prevState => {\r\n          return {\r\n            ...prevState,\r\n            user: {\r\n              ...prevState.user,\r\n              followers: [...prevState.user.followers, data._id]\r\n            }\r\n          };\r\n        });\r\n        setShowFollow(false);\r\n      });\r\n\r\n    localStorage.setItem(\r\n      \"followingNames\",\r\n      localStorage.getItem(\"followingNames\") + userProfile.user.name\r\n    );\r\n  };\r\n\r\n  const unfollowUser = () => {\r\n    fetch(\"/unfollow\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        unfollowId: userid,\r\n        unfollowName: userProfile.user.name\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        dispatch({\r\n          type: \"UPDATE\",\r\n          payload: { following: data.following, followers: data.followers }\r\n        });\r\n        localStorage.setItem(\"user\", JSON.stringify(data));\r\n\r\n        setProfile(prevState => {\r\n          const newFollower = prevState.user.followers.filter(\r\n            item => item != data._id\r\n          );\r\n          return {\r\n            ...prevState,\r\n            user: {\r\n              ...prevState.user,\r\n              followers: newFollower\r\n            }\r\n          };\r\n        });\r\n        setShowFollow(true);\r\n      });\r\n\r\n    //Set local storage\r\n    localStorage.setItem(\r\n      \"followingNames\",\r\n      localStorage\r\n        .getItem(\"followingNames\")\r\n        .replace([userProfile.user.name + \",\"], \"\")\r\n    );\r\n\r\n    //***********************MAY NEED TO REMOVE ID FROM USER OBJECT TOO IF NEEDED */\r\n    console.log(\r\n      localStorage\r\n        .getItem(\"followingNames\")\r\n        .replace([userProfile.user.name + \",\"], \"\")\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {userProfile ? (\r\n        <div style={{ maxWidth: \"80%\", margin: \"0px auto\" }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              margin: \"18px 0px\",\r\n              borderBottom: \"1px solid grey\"\r\n            }}\r\n          >\r\n            <div>\r\n              <img\r\n                style={{\r\n                  width: \"150px\",\r\n                  height: \"150px\",\r\n                  borderRadius: \"75px\"\r\n                }}\r\n                src={userProfile.user.pic}\r\n              />\r\n            </div>\r\n            <div>\r\n              <h4>{userProfile.user.name}</h4>\r\n              <h4>{userProfile.user.email}</h4>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  width: \"106%\"\r\n                }}\r\n              >\r\n                <h6>{userProfile.posts.length} posts</h6>\r\n                <h6>{userProfile.user.followers.length} followers</h6>\r\n                <h6>{userProfile.user.following.length} following</h6>\r\n              </div>\r\n              {showfollow ? (\r\n                <button\r\n                  style={{\r\n                    margin: \"10px\"\r\n                  }}\r\n                  className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                  onClick={() => followUser()}\r\n                >\r\n                  Follow\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  style={{\r\n                    margin: \"10px\"\r\n                  }}\r\n                  className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                  onClick={() => unfollowUser()}\r\n                >\r\n                  UnFollow\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className=\"gallery\">\r\n            {userProfile.posts.map(item => {\r\n              return item.photo != \"No photo\" ? (\r\n                <img\r\n                  key={item._id}\r\n                  className=\"item\"\r\n                  src={item.photo}\r\n                  alt={item.title}\r\n                  style={{\r\n                    width: \"300px\",\r\n                    margin: \"10px 10px 10px 10px\"\r\n                  }}\r\n                />\r\n              ) : (\r\n                <div\r\n                  style={{\r\n                    maxWidth: \"50%\",\r\n                    margin: \"10px 10px 10px 10px\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\"\r\n                  }}\r\n                >\r\n                  <p>{item.title}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div> */}\r\n        </div>\r\n      ) : (\r\n        <h2>Loading...</h2>\r\n      )}\r\n      {userProfile &&\r\n        userProfile.posts.map(item => {\r\n          return (\r\n            <div className=\"card home-card\" key={item._id}>\r\n              <h5\r\n                style={{\r\n                  padding: \"24px\"\r\n                }}\r\n              >\r\n                {console.log(userProfile)}\r\n                {/* <Link\r\n                to={\r\n                  item.postedBy._id !== state._id\r\n                    ? \"/profile/\" + item.postedBy._id\r\n                    : \"/profile\"\r\n                }\r\n              > */}\r\n                {item.postedBy.name}\r\n                {/* </Link>{\" \"} */}\r\n                {item.postedBy._id == state._id && (\r\n                  <i\r\n                    className=\"material-icons\"\r\n                    style={{\r\n                      float: \"right\"\r\n                    }}\r\n                    // onClick={() => deletePost(item._id)}\r\n                  >\r\n                    delete\r\n                  </i>\r\n                )}\r\n              </h5>\r\n\r\n              <div className=\"card-image\">\r\n                {item.photo != \"\" && item.photo != \"No photo\" ? (\r\n                  <img src={item.photo} />\r\n                ) : (\r\n                  <div style={{ marginTop: -20 }} />\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"card-content\">\r\n                {/* \r\n              <i className=\"material-icons\" style={{ color: \"#64b5f6\" }}>\r\n                favorite\r\n              </i>\r\n              */}\r\n                <h6\r\n                  style={{\r\n                    fontWeight: \"bold\"\r\n                  }}\r\n                >\r\n                  {item.title}\r\n                </h6>\r\n                <p>{item.body}</p>\r\n\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"10px\"\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {/* Likes displayer */}\r\n                  {item.likes.includes(state._id) ? (\r\n                    <i\r\n                      className=\"material-icons\"\r\n                      // onClick={() => {\r\n                      //   unlikePost(item._id);\r\n                      // }}\r\n                      style={{\r\n                        color: \"#64b5f6\"\r\n                      }}\r\n                    >\r\n                      thumb_up\r\n                    </i>\r\n                  ) : (\r\n                    <i\r\n                      className=\"material-icons\"\r\n                      // onClick={() => {\r\n                      //   likePost(item._id);\r\n                      // }}\r\n                    >\r\n                      thumb_up\r\n                    </i>\r\n                  )}\r\n                  <h6\r\n                    style={{\r\n                      margin: \"0px 0px 0px 15px\"\r\n                    }}\r\n                  >\r\n                    {item.likes.length} likes\r\n                  </h6>\r\n                </div>\r\n\r\n                {/* {item.comments.map(record => {\r\n                  return (\r\n                    <h6 key={record._id}>\r\n                      <span style={{ fontWeight: 500 }}>\r\n                        {record.postedBy.name}\r\n                      </span>{\" \"}\r\n                      {console.log(record.postedBy.name)}\r\n                      {record.text}\r\n                    </h6>\r\n                  );\r\n                })} */}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screens\\FollowingPost.js",["110","111","112","113","114","115","116","117"],"E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screens\\Profile.js",["118","119","120","121","122","123","124"],"import React, { useEffect, useState, useContext, useCallback } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nconst Profile = () => {\r\n  const [data, setData] = useState([]);\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"/mypost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        setData(result.mypost);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      const data = new FormData();\r\n      data.append(\"file\", image);\r\n      data.append(\"upload_preset\", \"usmforum\");\r\n      data.append(\"clooud_name\", \"dfoc7c90v\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dfoc7c90v/image/upload\", {\r\n        method: \"post\",\r\n        body: data\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          fetch(\"/updatepic\", {\r\n            method: \"put\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n              pic: data.url\r\n            })\r\n          })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n              console.log(result);\r\n              localStorage.setItem(\r\n                \"user\",\r\n                JSON.stringify({ ...state, pic: result.pic })\r\n              );\r\n              dispatch({ type: \"UPDATEPIC\", payload: result.pic });\r\n              //window.location.reload();\r\n            });\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [image]);\r\n\r\n  const updatePhoto = file => {\r\n    setImage(file);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {state ? (\r\n        <div style={{ maxWidth: \"70%\", margin: \"0px auto\" }}>\r\n          <div\r\n            style={{\r\n              margin: \"18px 0px\",\r\n              borderBottom: \"1px solid grey\"\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\"\r\n              }}\r\n            >\r\n              <div>\r\n                <div\r\n                  className=\"file-field input-field\"\r\n                  style={{ margin: \"10px\" }}\r\n                >\r\n                  <div>\r\n                    <div className=\"hvrbox\">\r\n                      <img\r\n                        className=\"hvrbox-layer_bottom\"\r\n                        style={{\r\n                          width: \"160px\",\r\n                          height: \"160px\",\r\n                          borderRadius: \"80px\"\r\n                        }}\r\n                        src={state ? state.pic : \"loading\"}\r\n                      />\r\n                      <div className=\"hvrbox-layer_top\">\r\n                        <div className=\"hvrbox-text\">\r\n                          Click to update\r\n                          <input\r\n                            type=\"file\"\r\n                            onChange={e => updatePhoto(e.target.files[0])}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    className=\"file-path-wrapper\"\r\n                    style={{ visibility: \"hidden\" }}\r\n                  >\r\n                    {/*Hidden for now*/}\r\n                    <input className=\"file-path validate\" type=\"text\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <h4>{state ? state.name : \"loading\"}</h4>\r\n                <h5>{state ? state.email : \"loading\"}</h5>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    width: \"108%\"\r\n                  }}\r\n                >\r\n                  <h6>{data.length} posts</h6>\r\n                  <h6>{state ? state.followers.length : \"0\"} followers</h6>\r\n                  <h6>{state ? state.following.length : \"0\"} following</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {console.log(data)}\r\n          {/* <div className=\"gallery\">\r\n            {mypics.map(item => {\r\n              return item.photo != \"No photo\" ? (\r\n                <img\r\n                  key={item._id}\r\n                  className=\"item\"\r\n                  src={item.photo}\r\n                  alt={item.title}\r\n                  style={{\r\n                    maxWidth: \"50%\",\r\n                    margin: \"10px 10px 10px 10px\"\r\n                  }}\r\n                />\r\n              ) : (\r\n                <div\r\n                  style={{\r\n                    maxWidth: \"50%\",\r\n                    margin: \"10px 10px 10px 10px\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\"\r\n                  }}\r\n                >\r\n                  <p\r\n                    style={{\r\n                      fontWeight: \"bold\"\r\n                    }}\r\n                  >\r\n                    {item.title}\r\n                  </p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div> */}\r\n        </div>\r\n      ) : (\r\n        <h2>Loading....</h2>\r\n      )}\r\n\r\n      {data &&\r\n        data.map(item => {\r\n          return (\r\n            <div className=\"card home-card\" key={item._id}>\r\n              <h5\r\n                style={{\r\n                  padding: 24\r\n                }}\r\n              >\r\n                {/* <Link\r\n                to={\r\n                  item.postedBy._id !== state._id\r\n                    ? \"/profile/\" + item.postedBy._id\r\n                    : \"/profile\"\r\n                }\r\n              > */}\r\n                {item.postedBy.name}\r\n                {/* </Link>{\" \"} */}\r\n                {item.postedBy._id == state._id && (\r\n                  <i\r\n                    className=\"material-icons\"\r\n                    style={{\r\n                      float: \"right\"\r\n                    }}\r\n                    // onClick={() => deletePost(item._id)}\r\n                  >\r\n                    delete\r\n                  </i>\r\n                )}\r\n              </h5>\r\n\r\n              <div className=\"card-image\">\r\n                {item.photo != \"\" && item.photo != \"No photo\" ? (\r\n                  <img src={item.photo} />\r\n                ) : (\r\n                  <div style={{ marginTop: -20 }} />\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"card-content\">\r\n                {/* \r\n              <i className=\"material-icons\" style={{ color: \"#64b5f6\" }}>\r\n                favorite\r\n              </i>\r\n              */}\r\n                <h6\r\n                  style={{\r\n                    fontWeight: \"bold\"\r\n                  }}\r\n                >\r\n                  {item.title}\r\n                </h6>\r\n                <p>{item.body}</p>\r\n\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"10px\"\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {/* Likes displayer */}\r\n                  {item.likes.includes(state._id) ? (\r\n                    <i\r\n                      className=\"material-icons\"\r\n                      // onClick={() => {\r\n                      //   unlikePost(item._id);\r\n                      // }}\r\n                      style={{\r\n                        color: \"#64b5f6\"\r\n                      }}\r\n                    >\r\n                      thumb_up\r\n                    </i>\r\n                  ) : (\r\n                    <i\r\n                      className=\"material-icons\"\r\n                      // onClick={() => {\r\n                      //   likePost(item._id);\r\n                      // }}\r\n                    >\r\n                      thumb_up\r\n                    </i>\r\n                  )}\r\n                  <h6\r\n                    style={{\r\n                      margin: \"0px 0px 0px 15px\"\r\n                    }}\r\n                  >\r\n                    {item.likes.length} likes\r\n                  </h6>\r\n                </div>\r\n\r\n                {/* {item.comments.map(record => {\r\n                  return (\r\n                    <h6 key={record._id}>\r\n                      <span style={{ fontWeight: 500 }}>\r\n                        {record.postedBy.name}\r\n                      </span>{\" \"}\r\n                      {console.log(record.postedBy.name)}\r\n                      {record.text}\r\n                    </h6>\r\n                  );\r\n                })} */}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screenComponents\\left.js",["125","126","127","128"],"E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screenComponents\\right.js",["129","130","131","132"],"E:\\Y3S1\\322\\The-322Forum\\server\\client\\src\\components\\screenComponents\\filter.js",["133","134","135","136","137"],"import React, { Component,useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { RadioGroup, RadioButton } from 'react-radio-buttons';\r\n\r\n\r\nclass Filter extends React.Component {\r\n\r\n    nextPath(path) {\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <RadioGroup onChange={e => {\r\n            if(e == \"all\"){    //All posts{}\r\n                this.nextPath('/')\r\n                localStorage.setItem(\"filter\", \"all\")\r\n            }\r\n            else{\r\n                this.nextPath('/followingPost')\r\n                localStorage.setItem(\"filter\", \"followed\")\r\n            } \r\n        }}  horizontal>\r\n            <RadioButton value=\"all\" checked={localStorage.getItem(\"filter\") == \"all\"? true : false} >\r\n                All\r\n            </RadioButton>\r\n            <RadioButton value=\"following\" checked={localStorage.getItem(\"filter\") == \"all\"? false : true}>\r\n                Following\r\n            </RadioButton>\r\n\r\n        </RadioGroup>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Filter);",{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":18,"column":11,"nodeType":"144","messageId":"145","endLine":18,"endColumn":16},{"ruleId":"146","severity":1,"message":"147","line":30,"column":6,"nodeType":"148","endLine":30,"endColumn":8,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":4,"column":19,"nodeType":"152","messageId":"153","endLine":4,"endColumn":21},{"ruleId":"150","severity":1,"message":"151","line":7,"column":19,"nodeType":"152","messageId":"153","endLine":7,"endColumn":21},{"ruleId":"150","severity":1,"message":"151","line":11,"column":19,"nodeType":"152","messageId":"153","endLine":11,"endColumn":21},{"ruleId":"150","severity":1,"message":"151","line":18,"column":19,"nodeType":"152","messageId":"153","endLine":18,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":7,"column":12,"nodeType":"144","messageId":"145","endLine":7,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":58,"column":17,"nodeType":"156","endLine":58,"endColumn":75},{"ruleId":"142","severity":1,"message":"157","line":10,"column":18,"nodeType":"144","messageId":"145","endLine":10,"endColumn":26},{"ruleId":"142","severity":1,"message":"158","line":11,"column":9,"nodeType":"144","messageId":"145","endLine":11,"endColumn":16},{"ruleId":"159","severity":1,"message":"160","line":87,"column":9,"nodeType":"156","endLine":87,"endColumn":55},{"ruleId":"154","severity":1,"message":"155","line":148,"column":11,"nodeType":"156","endLine":151,"endColumn":13},{"ruleId":"142","severity":1,"message":"161","line":3,"column":16,"nodeType":"144","messageId":"145","endLine":3,"endColumn":26},{"ruleId":"142","severity":1,"message":"157","line":11,"column":18,"nodeType":"144","messageId":"145","endLine":11,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":41,"column":24,"nodeType":"152","messageId":"153","endLine":41,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":69,"column":24,"nodeType":"152","messageId":"153","endLine":69,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":98,"column":24,"nodeType":"152","messageId":"153","endLine":98,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":139,"column":39,"nodeType":"152","messageId":"153","endLine":139,"endColumn":41},{"ruleId":"150","severity":1,"message":"151","line":160,"column":36,"nodeType":"152","messageId":"153","endLine":160,"endColumn":38},{"ruleId":"150","severity":1,"message":"162","line":174,"column":29,"nodeType":"152","messageId":"153","endLine":174,"endColumn":31},{"ruleId":"150","severity":1,"message":"162","line":174,"column":49,"nodeType":"152","messageId":"153","endLine":174,"endColumn":51},{"ruleId":"154","severity":1,"message":"155","line":175,"column":19,"nodeType":"156","endLine":175,"endColumn":43},{"ruleId":"146","severity":1,"message":"163","line":17,"column":6,"nodeType":"148","endLine":17,"endColumn":11,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":39,"column":18,"nodeType":"167","messageId":"168","endLine":39,"endColumn":19,"suggestions":"169"},{"ruleId":"165","severity":1,"message":"166","line":39,"column":43,"nodeType":"167","messageId":"168","endLine":39,"endColumn":44,"suggestions":"170"},{"ruleId":"154","severity":1,"message":"155","line":83,"column":7,"nodeType":"156","endLine":83,"endColumn":65},{"ruleId":"146","severity":1,"message":"171","line":39,"column":8,"nodeType":"148","endLine":39,"endColumn":13,"suggestions":"172"},{"ruleId":"150","severity":1,"message":"162","line":42,"column":18,"nodeType":"152","messageId":"153","endLine":42,"endColumn":20},{"ruleId":"142","severity":1,"message":"173","line":1,"column":50,"nodeType":"144","messageId":"145","endLine":1,"endColumn":61},{"ruleId":"146","severity":1,"message":"174","line":22,"column":6,"nodeType":"148","endLine":22,"endColumn":8,"suggestions":"175"},{"ruleId":"150","severity":1,"message":"162","line":89,"column":26,"nodeType":"152","messageId":"153","endLine":89,"endColumn":28},{"ruleId":"154","severity":1,"message":"155","line":131,"column":15,"nodeType":"156","endLine":138,"endColumn":17},{"ruleId":"150","severity":1,"message":"151","line":228,"column":36,"nodeType":"152","messageId":"153","endLine":228,"endColumn":38},{"ruleId":"150","severity":1,"message":"162","line":242,"column":29,"nodeType":"152","messageId":"153","endLine":242,"endColumn":31},{"ruleId":"150","severity":1,"message":"162","line":242,"column":49,"nodeType":"152","messageId":"153","endLine":242,"endColumn":51},{"ruleId":"154","severity":1,"message":"155","line":243,"column":19,"nodeType":"156","endLine":243,"endColumn":43},{"ruleId":"142","severity":1,"message":"157","line":10,"column":18,"nodeType":"144","messageId":"145","endLine":10,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":39,"column":24,"nodeType":"152","messageId":"153","endLine":39,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":66,"column":24,"nodeType":"152","messageId":"153","endLine":66,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":95,"column":24,"nodeType":"152","messageId":"153","endLine":95,"endColumn":26},{"ruleId":"150","severity":1,"message":"151","line":154,"column":36,"nodeType":"152","messageId":"153","endLine":154,"endColumn":38},{"ruleId":"150","severity":1,"message":"162","line":168,"column":29,"nodeType":"152","messageId":"153","endLine":168,"endColumn":31},{"ruleId":"150","severity":1,"message":"162","line":168,"column":49,"nodeType":"152","messageId":"153","endLine":168,"endColumn":51},{"ruleId":"154","severity":1,"message":"155","line":169,"column":19,"nodeType":"156","endLine":169,"endColumn":43},{"ruleId":"142","severity":1,"message":"173","line":1,"column":50,"nodeType":"144","messageId":"145","endLine":1,"endColumn":61},{"ruleId":"146","severity":1,"message":"176","line":59,"column":6,"nodeType":"148","endLine":59,"endColumn":13,"suggestions":"177"},{"ruleId":"154","severity":1,"message":"155","line":88,"column":23,"nodeType":"156","endLine":96,"endColumn":25},{"ruleId":"150","severity":1,"message":"151","line":191,"column":36,"nodeType":"152","messageId":"153","endLine":191,"endColumn":38},{"ruleId":"150","severity":1,"message":"162","line":205,"column":29,"nodeType":"152","messageId":"153","endLine":205,"endColumn":31},{"ruleId":"150","severity":1,"message":"162","line":205,"column":49,"nodeType":"152","messageId":"153","endLine":205,"endColumn":51},{"ruleId":"154","severity":1,"message":"155","line":206,"column":19,"nodeType":"156","endLine":206,"endColumn":43},{"ruleId":"142","severity":1,"message":"178","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"179","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":36},{"ruleId":"142","severity":1,"message":"143","line":7,"column":11,"nodeType":"144","messageId":"145","endLine":7,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":23,"column":7,"nodeType":"156","endLine":36,"endColumn":9},{"ruleId":"142","severity":1,"message":"180","line":1,"column":39,"nodeType":"144","messageId":"145","endLine":1,"endColumn":48},{"ruleId":"142","severity":1,"message":"181","line":7,"column":21,"nodeType":"144","messageId":"145","endLine":7,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":10,"column":11,"nodeType":"144","messageId":"145","endLine":10,"endColumn":16},{"ruleId":"142","severity":1,"message":"157","line":10,"column":18,"nodeType":"144","messageId":"145","endLine":10,"endColumn":26},{"ruleId":"142","severity":1,"message":"180","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"178","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":35},{"ruleId":"150","severity":1,"message":"151","line":15,"column":18,"nodeType":"152","messageId":"153","endLine":15,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":24,"column":78,"nodeType":"152","messageId":"153","endLine":24,"endColumn":80},{"ruleId":"150","severity":1,"message":"151","line":27,"column":84,"nodeType":"152","messageId":"153","endLine":27,"endColumn":86},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["184"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'dispatch' is assigned a value but never used.","'history' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useHistory' is defined but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["185"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["186","187"],["188","189"],"React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["190"],"'useCallback' is defined but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["191"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["192"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Component' is defined but never used.","'setF' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"messageId":"197","fix":"198","desc":"199"},{"messageId":"200","fix":"201","desc":"202"},{"messageId":"197","fix":"203","desc":"199"},{"messageId":"200","fix":"204","desc":"202"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [dispatch, history]",{"range":"211","text":"212"},"Update the dependencies array to be: [uploadFields, url]",{"range":"213","text":"214"},"removeEscape",{"range":"215","text":"216"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"217","text":"218"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"219","text":"216"},{"range":"220","text":"218"},"Update the dependencies array to be: [body, history, title, url]",{"range":"221","text":"222"},"Update the dependencies array to be: [userid]",{"range":"223","text":"224"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"225","text":"226"},[1091,1093],"[dispatch, history]",[496,501],"[uploadFields, url]",[1036,1037],"",[1036,1036],"\\",[1061,1062],[1061,1061],[1277,1282],"[body, history, title, url]",[705,707],"[userid]",[1756,1763],"[dispatch, image, state]"]