[{"C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\index.js":"1","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\App.js":"2","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\reportWebVitals.js":"3","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screens\\Signup.js":"4","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\Navbar.js":"5","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screens\\Home.js":"6","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screens\\UserProfile.js":"7","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screens\\Signin.js":"8","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screens\\Profile.js":"9","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screens\\FollowingPost.js":"10","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screens\\CreatePost.js":"11","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\reducers\\userReducer.js":"12","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screenComponents\\left.js":"13","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screenComponents\\right.js":"14","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screenComponents\\filter.js":"15"},{"size":517,"mtime":1609655672901,"results":"16","hashOfConfig":"17"},{"size":2071,"mtime":1609848105987,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1609655672902,"results":"19","hashOfConfig":"17"},{"size":3643,"mtime":1609870185283,"results":"20","hashOfConfig":"17"},{"size":4868,"mtime":1609870257618,"results":"21","hashOfConfig":"17"},{"size":7005,"mtime":1609923183118,"results":"22","hashOfConfig":"17"},{"size":6113,"mtime":1609927015361,"results":"23","hashOfConfig":"17"},{"size":3078,"mtime":1609870177695,"results":"24","hashOfConfig":"17"},{"size":5047,"mtime":1609927033570,"results":"25","hashOfConfig":"17"},{"size":6140,"mtime":1609923196937,"results":"26","hashOfConfig":"17"},{"size":3409,"mtime":1609844853318,"results":"27","hashOfConfig":"17"},{"size":518,"mtime":1609655672902,"results":"28","hashOfConfig":"17"},{"size":2315,"mtime":1609921385977,"results":"29","hashOfConfig":"17"},{"size":2255,"mtime":1609924448259,"results":"30","hashOfConfig":"17"},{"size":1074,"mtime":1609869836666,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"86ypnx",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"34"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"34"},"C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\index.js",[],["74","75"],"C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\App.js",["76","77"],"import \"./App.css\";\r\nimport NavBar from \"./components/Navbar\";\r\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport Home from \"./components/screens/Home\";\r\nimport Signin from \"./components/screens/Signin\";\r\nimport Profile from \"./components/screens/Profile\";\r\nimport Signup from \"./components/screens/Signup\";\r\nimport UserProfile from \"./components/screens/UserProfile\";\r\nimport CreatePost from \"./components/screens/CreatePost\";\r\nimport FollowingPost from \"./components/screens/FollowingPost\";\r\nimport React, { useEffect, createContext, useReducer, useContext } from \"react\";\r\nimport { reducer, initialState } from \"./reducers/userReducer\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst Routing = () => {\r\n  const history = useHistory();\r\n  const { state, dispatch } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    if (user) {\r\n      //Signed in\r\n      dispatch({ type: \"USER\", payload: user });\r\n    } else {\r\n      //Not signed in\r\n      history.push(\"/signin\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Switch style={{marginTop:\"70px\", paddingTop:\"70px\"}}>\r\n      <Route exact path=\"/\" >\r\n        <Home />\r\n      </Route>\r\n\r\n      <Route path=\"/signin\">\r\n        <Signin />\r\n      </Route>\r\n\r\n      <Route path=\"/signup\">\r\n        <Signup />\r\n      </Route>\r\n\r\n      <Route path=\"/profile/:userid\">\r\n        <UserProfile />\r\n      </Route>\r\n\r\n      <Route exact path=\"/profile\">\r\n        <Profile />\r\n      </Route>\r\n\r\n      <Route path=\"/create\">\r\n        <CreatePost />\r\n      </Route>\r\n\r\n      <Route path=\"/followingPost\">\r\n        <FollowingPost />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ state, dispatch }}>\r\n      <BrowserRouter>\r\n        <NavBar/>\r\n        <div style={{paddingTop:\"68px\"}}>\r\n          <Routing/>\r\n        </div>\r\n      </BrowserRouter>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\reportWebVitals.js",[],"C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screens\\Signup.js",["78","79","80","81"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\n\r\nconst Signup = () => {\r\n  const history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [url, setUrl] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      uploadFields();\r\n    }\r\n  }, [url]);\r\n\r\n  const uploadPic = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"usmforum\");\r\n    data.append(\"clooud_name\", \"dfoc7c90v\");\r\n    fetch(\"https://api.cloudinary.com/v1_1/dfoc7c90v/image/upload\", {\r\n      method: \"post\",\r\n      body: data\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setUrl(data.url);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const uploadFields = () => {\r\n    if (\r\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n        email\r\n      )\r\n    ) {\r\n      M.toast({ html: \"invalid email\", classes: \"#c62828 red darken-3\" });\r\n      return;\r\n    }\r\n    fetch(\"/signup\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        password,\r\n        email,\r\n        pic: url\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.error) {\r\n          M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\r\n        } else {\r\n          M.toast({ html: data.message, classes: \"#43a047 green darken-1\" });\r\n          history.push(\"/signin\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const PostData = () => {\r\n    if (image) {\r\n      uploadPic();\r\n    } else {\r\n      uploadFields();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"parentCard\">\r\n      <div className=\"card auth-card input-field\">\r\n      <img src=\"/images/USMForum.svg\" style={{height:\"300px\"}}/>\r\n                \r\n                \r\n                {/* \r\n                <h2 style={{\r\n                    fontFamily:\"'Libre Baskerville', serif\"\r\n                }}>USMForum</h2>\r\n                */}\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"username\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n        ></input>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <div className=\"file-field input-field\">\r\n          <div className=\"btn #64b5f6 blue darken-1\">\r\n            <span>Upload pic</span>\r\n            <input type=\"file\" onChange={e => setImage(e.target.files[0])} />\r\n          </div>\r\n          <div className=\"file-path-wrapper\">\r\n            <input className=\"file-path validate\" type=\"text\" />\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n          onClick={() => PostData()}\r\n        >\r\n          Sign up\r\n        </button>\r\n\r\n        <h6>\r\n          <Link to=\"/signin\">Already have an account?</Link>\r\n        </h6>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\Navbar.js",["82","83"],"import React, { useContext, useRef, useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../App\";\r\nimport M from \"materialize-css\";\r\n\r\nconst NavBar = () => {\r\n  const searchModal = useRef(null);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [userDetails, setUserDetails] = useState([]);\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    M.Modal.init(searchModal.current);\r\n  }, []);\r\n\r\n\r\n  const renderList = () => {\r\n    if (state) {\r\n      //Signed in\r\n      return [\r\n        <li key=\"1\">\r\n          <div style={{\r\n            minWidth:\"200px\",\r\n            height:\"50px\",\r\n            border:\"1px solid gray\",\r\n            borderRadius:\"20px\",\r\n            //marginTop:\"6px\",\r\n            justifyContent:\"center\",\r\n            backgroundColor:\"white\",\r\n            margin:\"6px 20px 0px 0px\"\r\n          }}>\r\n            {/* Inner content of search bar */}\r\n            <div style={{\r\n              margin:\"-7px 10px 5px 15px\",\r\n              display:\"grid\",\r\n              maxWidth:\"500px\",\r\n              width:\"30%\",\r\n            }}>\r\n              <i data-target=\"modal1\" style={{\r\n                display:\"grid\",\r\n                width:\"100%\",\r\n              }}>\r\n                <i\r\n                    data-target=\"modal1\"\r\n                    className=\"large material-icons modal-trigger\"\r\n                    style={{ color: \"black\", gridColumn:\"1\"}}\r\n                  >\r\n                    search\r\n                </i>\r\n\r\n                <p data-target=\"modal1\"\r\n                  style={{\r\n                    gridColumn:'2',\r\n                    color:'gray',\r\n                    float:'left',\r\n                    verticalAlign:\"middle\",\r\n                    margin:\"0\",\r\n                    padding:\"0\",\r\n                    fontSize:\"15px\",\r\n                    fontStyle:\"normal\"\r\n                  }}>\r\n                    {localStorage.getItem(\"searchItem\")}\r\n                </p>\r\n              </i>\r\n              \r\n            </div>\r\n          </div>\r\n        </li>,\r\n        \r\n        \r\n      ];\r\n    } else {\r\n      //Not signed in, prompt signin/up\r\n      return [\r\n        <li key=\"6\">\r\n          <Link to=\"/signin\">Sign in</Link>\r\n        </li>,\r\n        <li key=\"7\">\r\n          <Link to=\"/signup\">Sign up</Link>\r\n        </li>\r\n      ];\r\n    }\r\n  };\r\n\r\n  const fetchUsers = query => {\r\n    setSearch(query);\r\n    fetch(\"/search-users\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        query\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(results => {\r\n        setUserDetails(results.user);\r\n      });\r\n  };\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <nav style={{\r\n      position:\"fixed\",\r\n      zIndex:\"100\",\r\n      backgroundColor:\"#64b5f6\",\r\n      top:\"0\",\r\n      }}>\r\n      <div className=\"nav-wrapper \"\r\n      >\r\n        <Link to={state ? \"/\" : \"/signin\"} className=\"brand-logo left\" \r\n        style={{\r\n          display:\"block\", \r\n          margin:\"auto 20px\",\r\n          fontFamily:\"'Libre Baskerville', serif\"\r\n        }}>\r\n          USMForum\r\n          {/*      USE IF WANT ICON IN TOP LEFT\r\n          <img src=\"/images/USMForum.svg\" style={{height:\"300px\"}}/>\r\n*/}\r\n        </Link>\r\n\r\n        <ul id=\"nav-mobile\" className=\"right\" style={{\r\n          alignItems:\"center\"\r\n        }}>\r\n          {renderList()}\r\n        </ul>\r\n\r\n      </div>\r\n\r\n      <div\r\n        id=\"modal1\"\r\n        className=\"modal\"\r\n        ref={searchModal}\r\n        style={{ color: \"black\" }}\r\n      >\r\n        <div className=\"modal-content\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"search users\"\r\n            value={search}\r\n            onChange={e => {\r\n              fetchUsers(e.target.value)\r\n              localStorage.setItem(\"searchItem\", e.target.value)\r\n            }}\r\n          />\r\n          <ul className=\"collection\">\r\n            {userDetails.map(item => {\r\n              return (\r\n                <Link\r\n                  to={\r\n                    item._id !== state._id ? \"/profile/\" + item._id : \"/profile\"\r\n                  }\r\n                  onClick={() => {\r\n                    M.Modal.getInstance(searchModal.current).close();\r\n                    setSearch(\"\");\r\n                  }}\r\n                >\r\n                  <p className=\"collection-item\">{item.name}</p>\r\n                </Link>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button\r\n            className=\"modal-close waves-effect waves-green btn-flat\"\r\n            onClick={() => setSearch(\"\")}\r\n          >\r\n            close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screens\\Home.js",["84","85","86","87","88","89","90","91","92","93"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport CreatePost from \"./CreatePost\";\r\nimport Left from \"../screenComponents/left.js\"\r\nimport Right from \"../screenComponents/right.js\"\r\nimport M from \"materialize-css\";\r\n\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const { state, dispatch } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/allpost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        setData(result.posts);\r\n      });\r\n      }, []);\r\n\r\n  const likePost = id => {\r\n    fetch(\"/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        const newData = data.map(item => {\r\n          console.log(item);\r\n          if (item._id == result._id) {\r\n            console.log(result);\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const unlikePost = id => {\r\n    fetch(\"/unlike\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        const newData = data.map(item => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const makeComment = (text, postId) => {\r\n    fetch(\"/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        postId,\r\n        text\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        const newData = data.map(item => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deletePost = postid => {\r\n    fetch(`/deletepost/${postid}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        const newData = data.filter(item => {\r\n          return item._id !== result._id;\r\n        });\r\n        setData(newData);\r\n      });\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"grid-container\" >\r\n      <Left/>\r\n\r\n      <div className=\"home\" style={{\r\n        flexGrow:'1',\r\n        width:\"70%\",\r\n      }}>\r\n\r\n      \r\n      {\r\n        localStorage.getItem(\"type\") == \"admin\"?\r\n        <CreatePost/>:<div/>\r\n      }\r\n\r\n      <h4 className=\"home-card\">All posts</h4>    \r\n\r\n      {data.map(item => {\r\n        return (\r\n          <div className=\"card home-card\" key={item._id}>\r\n            <h5 style={{ \r\n              padding: \"10px 10px 5px 10px\"\r\n            }}>\r\n              <Link\r\n                to={\r\n                  item.postedBy._id !== state._id\r\n                    ? \"/profile/\" + item.postedBy._id\r\n                    : \"/profile\"\r\n                }\r\n              >\r\n                {item.postedBy.name}\r\n              </Link>{\" \"}\r\n              {item.postedBy._id == state._id && (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  style={{\r\n                    float: \"right\"\r\n                  }}\r\n                  onClick={() => deletePost(item._id)}\r\n                >\r\n                  delete\r\n                </i>\r\n              )}\r\n            </h5>\r\n\r\n            <div className=\"card-image\">\r\n              {item.photo != \"\" && item.photo != \"No photo\" ? (\r\n                <img src={item.photo} />\r\n              ) : (\r\n                <div />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"card-content\">\r\n              \r\n              {/* \r\n              <i className=\"material-icons\" style={{ color: \"#64b5f6\" }}>\r\n                favorite\r\n              </i>\r\n              */}\r\n              <h6 style={{\r\n                fontWeight:\"bold\",\r\n              }}>{item.title}</h6>\r\n              <p>{item.body}</p>\r\n\r\n              <div style={{\r\n                display:\"flex\",\r\n                alignItems:\"center\",\r\n                marginTop:\"10px\"\r\n              }}> {/* Likes displayer */}\r\n                  {item.likes.includes(state._id) ? (\r\n                  <i\r\n                    className=\"material-icons\"\r\n                    onClick={() => {\r\n                      unlikePost(item._id);\r\n                    }}\r\n                    style={{\r\n                      color:\"#64b5f6\",\r\n                    }}\r\n                  >\r\n                    thumb_up\r\n                  </i>\r\n                ) : (\r\n                  <i\r\n                    className=\"material-icons\"\r\n                    onClick={() => {\r\n                      likePost(item._id);\r\n                    }}\r\n                  >\r\n                    thumb_up\r\n                  </i>\r\n                )}\r\n\r\n                <h6 style={{\r\n                margin:\"0px 0px 0px 15px\",\r\n              }}>{item.likes.length} likes</h6>\r\n\r\n              </div>\r\n              \r\n              \r\n              {item.comments.map(record => {\r\n                return (\r\n                  <h6 key={record._id}>\r\n                    <span style={{ fontWeight: 500 }}>\r\n                      {record.postedBy.name}\r\n                    </span>{\" \"}\r\n                    {console.log(record.postedBy)}\r\n                    {record.text}\r\n                  </h6>\r\n                );\r\n              })}\r\n              <form\r\n                id=\"comment\"\r\n                onSubmit={e => {\r\n                  e.preventDefault();\r\n                  makeComment(e.target[0].value, item._id);\r\n                  e.target[0].value = \"\"\r\n                  M.toast({ html: \"Comment posted\" });\r\n                }}\r\n              >\r\n                <input id=\"comment_input\" type=\"text\" placeholder=\"Add a comment\" \r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n        })}\r\n      </div>\r\n    \r\n        <Right/>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screens\\UserProfile.js",["94","95","96","97","98"],"C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screens\\Signin.js",["99","100"],"import React, {useState, useContext} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Signin = ()=>{\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const PostData = () => {\r\n        if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)){\r\n            M.toast({html: \"Invalid email\"})\r\n            return\r\n        }\r\n        fetch(\"/signin\",{\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n            if(data.error){\r\n                M.toast({html: data.error})\r\n            }\r\n            else{   //Success\r\n                //Store local data\r\n                localStorage.setItem(\"jwt\", data.token) //JWT: Java web token\r\n                localStorage.setItem(\"user\", JSON.stringify(data.user))\r\n                localStorage.setItem(\"type\", data._type)\r\n\r\n                \r\n                localStorage.setItem(\"followingNames\", data.followingNames)\r\n                \r\n                var sad = localStorage.getItem(\"followingNames\").split(',')\r\n                localStorage.setItem(\"followingNames\", sad)\r\n                dispatch({type:\"USER\", payload:data.user})\r\n\r\n\r\n                M.toast({html:\"Signed in successfully!\"})\r\n                history.push('/')\r\n            }\r\n            console.log(data)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"parentCard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <img src=\"/images/USMForum.svg\" style={{height:\"300px\"}}/>\r\n                \r\n                \r\n                {/* \r\n                <h2 style={{\r\n                    fontFamily:\"'Libre Baskerville', serif\"\r\n                }}>USMForum</h2>\r\n                */}\r\n                \r\n                <input type=\"text\" \r\n                placeholder=\"email\"\r\n                value={email}\r\n                onChange={\r\n                    (e)=>setEmail(e.target.value)\r\n                }/>\r\n                \r\n\r\n                <input type=\"password\" \r\n                placeholder=\"password\"\r\n                value={password}\r\n                onChange={\r\n                    (e)=>setPassword(e.target.value)\r\n                }/>\r\n\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\"\r\n                onClick={()=>PostData()}\r\n                >\r\n                    Sign in\r\n                </button>\r\n\r\n                <h6>\r\n                    <Link to=\"/signup\">Don't have an account?</Link>\r\n                </h6>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screens\\Profile.js",["101","102","103","104"],"C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screens\\FollowingPost.js",["105","106","107","108","109","110"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Left from \"../screenComponents/left.js\";\r\nimport Right from \"../screenComponents/right.js\"\r\nimport M from \"materialize-css\";\r\n\r\n\r\nconst FollowingPost = () => {\r\n  const [data, setData] = useState([]);\r\n  const { state, dispatch } = useContext(UserContext);\r\n  useEffect(() => {\r\n    fetch(\"/followingpost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        setData(result.posts);\r\n      });\r\n  }, []);\r\n\r\n  const likePost = id => {\r\n    fetch(\"/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        //   console.log(result)\r\n        const newData = data.map(item => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const unlikePost = id => {\r\n    fetch(\"/unlike\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        //   console.log(result)\r\n        const newData = data.map(item => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const makeComment = (text, postId) => {\r\n    fetch(\"/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        postId,\r\n        text\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        const newData = data.map(item => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deletePost = postid => {\r\n    fetch(`/deletepost/${postid}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        const newData = data.filter(item => {\r\n          return item._id !== result._id;\r\n        });\r\n        setData(newData);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <Left/>\r\n\r\n      <div className=\"home\" style={{\r\n        flexGrow:'1',\r\n        width:\"70%\",\r\n      }}>\r\n\r\n        <h4 className=\"home-card\">All followed posts</h4>\r\n        {data.map(item => {\r\n          return (\r\n            <div className=\"card home-card\" key={item._id}>\r\n              <h5 style={{ padding: \"5px\" }}>\r\n                <Link\r\n                  to={\r\n                    item.postedBy._id !== state._id\r\n                      ? \"/profile/\" + item.postedBy._id\r\n                      : \"/profile\"\r\n                  }\r\n                >\r\n                  {item.postedBy.name}\r\n                </Link>{\" \"}\r\n                {item.postedBy._id == state._id && (\r\n                  <i\r\n                    className=\"material-icons\"\r\n                    style={{\r\n                      float: \"right\"\r\n                    }}\r\n                    onClick={() => deletePost(item._id)}\r\n                  >\r\n                    delete\r\n                  </i>\r\n                )}\r\n              </h5>\r\n              <div className=\"card-image\">\r\n                <img src={item.photo} />\r\n              </div>\r\n              <div className=\"card-content\">\r\n                <i className=\"material-icons\" style={{ color: \"red\" }}>\r\n                  favorite\r\n                </i>\r\n                {item.likes.includes(state._id) ? (\r\n                  <i\r\n                    className=\"material-icons\"\r\n                    onClick={() => {\r\n                      unlikePost(item._id);\r\n                    }}\r\n                  >\r\n                    thumb_down\r\n                  </i>\r\n                ) : (\r\n                  <i\r\n                    className=\"material-icons\"\r\n                    onClick={() => {\r\n                      likePost(item._id);\r\n                    }}\r\n                  >\r\n                    thumb_up\r\n                  </i>\r\n                )}\r\n\r\n                <h6>{item.likes.length} likes</h6>\r\n                <h6>{item.title}</h6>\r\n                <p>{item.body}</p>\r\n                {item.comments.map(record => {\r\n                  return (\r\n                    <h6 key={record._id}>\r\n                      <span style={{ fontWeight: \"500\" }}>\r\n                        {record.postedBy.name}\r\n                      </span>{\" \"}\r\n                      {record.text}\r\n                    </h6>\r\n                  );\r\n                })}\r\n                <form\r\n                  onSubmit={e => {\r\n                    e.preventDefault();\r\n                    makeComment(e.target[0].value, item._id);\r\n                    e.target[0].value = \"\"\r\n                  M.toast({ html: \"Comment posted\" });\r\n                  }}\r\n                >\r\n                  <input type=\"text\" placeholder=\"add a comment\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n    <Right/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FollowingPost;\r\n","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screens\\CreatePost.js",["111","112"],"import React, {useState, useEffect} from 'react'\r\nimport M from 'materialize-css'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst CreatePost = () =>{\r\n    const history = useHistory()\r\n    const [title, setTitle] = useState(\"\")\r\n    const [body, setBody] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(\"\")\r\n    \r\n    useEffect(()=>{ //callback to run code after url is set\r\n        if(url){\r\n            fetch(\"/createpost\",{\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic:url\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n                if(data.error){\r\n                    M.toast({html: data.error})\r\n                }\r\n                else{   //Success\r\n                    M.toast({html:\"Created post successfully!\"})\r\n                    history.push('/')\r\n                }\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n    }, [url])\r\n\r\n    const postDetails = () =>{\r\n        if(image != \"\"){\r\n            const data = new FormData()\r\n            data.append(\"file\", image)\r\n            data.append(\"upload_preset\", \"usmforum\")\r\n            data.append(\"cloud_name\", \"dfoc7c90v\")\r\n            \r\n            fetch(\"https://api.cloudinary.com/v1_1/dfoc7c90v/image/upload\", {\r\n                method:\"post\",\r\n                body: data\r\n            })\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                console.log(url)\r\n                setUrl(data.url)\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n        else{\r\n            setUrl(\"No photo\")\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"card input-filed\"\r\n        style={{\r\n            margin:\"30px auto\",\r\n            width:\"700px\",\r\n            maxWidth:\"80%\",\r\n            padding:\"20px\",\r\n            textAlign:\"center\"\r\n        }}\r\n        >\r\n            <input type=\"text\" \r\n                placeholder=\"Title\"\r\n                value={title}\r\n                onChange={\r\n                    (e)=>setTitle(e.target.value)\r\n            }/>\r\n            <input type=\"text\" \r\n                placeholder=\"Body\"\r\n                value={body}\r\n                onChange={\r\n                    (e)=>setBody(e.target.value)\r\n            }/>\r\n\r\n\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\">\r\n                    <span>Attachment</span>\r\n                    <input type=\"file\"\r\n                    onChange={(e)=> setImage(e.target.files[0])}\r\n                    />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\"\r\n            onClick={()=>postDetails()}\r\n            >\r\n                Post\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\reducers\\userReducer.js",["113","114","115","116"],"export const initialState = null;\r\n\r\nexport const reducer = (state, action) => {\r\n  if (action.type == \"USER\") {\r\n    return action.payload;\r\n  }\r\n  if (action.type == \"CLEAR\") {\r\n    //On logout\r\n    return null;\r\n  }\r\n  if (action.type == \"UPDATE\") {\r\n    return {\r\n      ...state,\r\n      followers: action.payload.followers,\r\n      following: action.payload.following\r\n    };\r\n  }\r\n  if (action.type == \"UPDATEPIC\") {\r\n    return {\r\n      ...state,\r\n      pic: action.payload.pic\r\n    };\r\n  }\r\n  return state;\r\n};\r\n","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screenComponents\\left.js",["117","118","119","120"],"import React, {useState, useEffect, useContext } from \"react\";\r\nimport M from \"materialize-css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nconst Left = () =>{\r\n    const { state, dispatch } = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n\r\n    return(\r\n        <div className=\"left-bar\" style={{\r\n            flexGrow: \"1\",\r\n            borderRight:\"1px solid gray\",\r\n            padding:\"10px\",\r\n            minWidth:\"15%\",\r\n            display:\"inline-list-item\",\r\n            alignItems:\"start\",\r\n            verticalAlign:\"center\",\r\n          }}>\r\n            <img src={JSON.parse(localStorage.getItem(\"user\")).pic}\r\n              style={{\r\n                height:\"100px\",\r\n                width:\"100px\",\r\n                borderRadius:\"50px\",\r\n                margin:\"0 auto\",\r\n                display: \"block\",\r\n              }}\r\n            />\r\n    \r\n            <h6 style={{\r\n              width:\"100%\",\r\n              margin:\"20px auto\",\r\n              textAlign:\"center\",\r\n              verticalAlign:\"middle\",\r\n              fontWeight:\"bold\"\r\n            }}>\r\n              {JSON.parse(localStorage.getItem(\"user\")).name}\r\n            </h6>\r\n    \r\n            {/*Profile button */}\r\n            <Link to=\"/profile\" style={{\r\n              display:\"flex\",\r\n              flexDirection:\"row\",\r\n              alignItems:\"center\"\r\n              }}>\r\n                <i className=\"material-icons\" style={{\r\n                  margin:\"10px 20px\"\r\n                }}>\r\n                  perm_identity\r\n                </i>\r\n                <p>Profile</p>\r\n              </Link>\r\n    \r\n            {/*Logout button */}\r\n            <div style={{\r\n              display:\"flex\",\r\n              flexDirection:\"row\",\r\n              alignItems:\"center\"\r\n            }}\r\n            onClick={() => {\r\n              localStorage.clear();\r\n              dispatch({ type: \"CLEAR\" });\r\n              history.push(\"/signin\");\r\n              M.toast({ html: \"Signed out.\" });\r\n            }}>\r\n              <i className=\"material-icons\" style={{\r\n                margin:\"10px 20px\"\r\n              }}>\r\n                exit_to_app\r\n              </i>\r\n              <p>Logout</p>\r\n            </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default Left;","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screenComponents\\right.js",["121","122","123","124"],"import React, {useState, useContext, Component} from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\";\r\nimport Filter from \"../screenComponents/filter.js\"\r\n\r\n\r\n\r\nconst Right = () => {\r\n    const [following, setF] = useState((localStorage.getItem(\"followingNames\")+\"\").split(\",\"))\r\n    const { state, dispatch } = useContext(UserContext);\r\n\r\n    \r\n    return(\r\n        <div style={{\r\n            flexGrow: \"2\",\r\n            alignItems:\"start\",\r\n            borderLeft:\"1px solid gray\",\r\n            padding:\"10px\",\r\n            minWidth:\"15%\",\r\n          }}>\r\n            <h6>\r\n              Filter\r\n            </h6>\r\n\r\n            <Filter/>\r\n\r\n \r\n            <h6 style={{\r\n              marginTop:\"30px\"\r\n            }}>\r\n              Followed\r\n            </h6>\r\n    \r\n            {following.map((item, index) =>{\r\n              //COloring\r\n              const colour = \"#\"+Math.floor(Math.random()*16777215).toString(16)\r\n\r\n              return(\r\n                <Link\r\n                  to={\r\n                    \"/profile/\" + JSON.parse(localStorage.getItem(\"user\")).following[index]\r\n                  }\r\n                  onClick={() => {\r\n                  }}\r\n                >\r\n                  <div style={{\r\n                    display:\"flex\",\r\n                    flexDirection:\"row\",\r\n                    alignItems:\"center\"\r\n                  }}>\r\n                    <div style={{\r\n                      minWidth:\"40px\",\r\n                      maxWidth:\"40px\",                      \r\n                      height:\"40px\",\r\n                      borderRadius:\"20px\",\r\n                      backgroundColor:colour,\r\n                      display:\"flex\",\r\n                      alignItems:\"center\",\r\n                      margin:\"5px 20px 5px 15px\"\r\n                    }}\r\n                    >\r\n                      <p style={{\r\n                        margin:\"auto\",\r\n                        fontWeight:\"bolder\"\r\n                      }}>{item.substring(0,2)}</p>\r\n                    </div>\r\n                    <p className=\"collection-item\">{item}</p>\r\n                  </div>\r\n                </Link>\r\n              )\r\n            })}\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Right","C:\\Users\\abell\\OneDrive\\Desktop\\CMT322\\322Forum\\server\\client\\src\\components\\screenComponents\\filter.js",["125","126","127","128","129"],"import React, { Component,useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { RadioGroup, RadioButton } from 'react-radio-buttons';\r\n\r\n\r\nclass Filter extends React.Component {\r\n\r\n    nextPath(path) {\r\n        this.props.history.push(path);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <RadioGroup onChange={e => {\r\n            if(e == \"all\"){    //All posts{}\r\n                this.nextPath('/')\r\n                localStorage.setItem(\"filter\", \"all\")\r\n            }\r\n            else{\r\n                this.nextPath('/followingPost')\r\n                localStorage.setItem(\"filter\", \"followed\")\r\n            } \r\n        }}  horizontal>\r\n            <RadioButton value=\"all\" checked={localStorage.getItem(\"filter\") == \"all\"? true : false} >\r\n                All\r\n            </RadioButton>\r\n            <RadioButton value=\"following\" checked={localStorage.getItem(\"filter\") == \"all\"? false : true}>\r\n                Following\r\n            </RadioButton>\r\n\r\n        </RadioGroup>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Filter);",{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":18,"column":11,"nodeType":"136","messageId":"137","endLine":18,"endColumn":16},{"ruleId":"138","severity":1,"message":"139","line":30,"column":6,"nodeType":"140","endLine":30,"endColumn":8,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"142","line":17,"column":6,"nodeType":"140","endLine":17,"endColumn":11,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":39,"column":18,"nodeType":"146","messageId":"147","endLine":39,"endColumn":19,"suggestions":"148"},{"ruleId":"144","severity":1,"message":"145","line":39,"column":43,"nodeType":"146","messageId":"147","endLine":39,"endColumn":44,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":83,"column":7,"nodeType":"152","endLine":83,"endColumn":65},{"ruleId":"134","severity":1,"message":"153","line":10,"column":18,"nodeType":"136","messageId":"137","endLine":10,"endColumn":26},{"ruleId":"134","severity":1,"message":"154","line":11,"column":9,"nodeType":"136","messageId":"137","endLine":11,"endColumn":16},{"ruleId":"134","severity":1,"message":"155","line":3,"column":16,"nodeType":"136","messageId":"137","endLine":3,"endColumn":26},{"ruleId":"134","severity":1,"message":"153","line":12,"column":18,"nodeType":"136","messageId":"137","endLine":12,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":42,"column":24,"nodeType":"158","messageId":"159","endLine":42,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":70,"column":24,"nodeType":"158","messageId":"159","endLine":70,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":99,"column":24,"nodeType":"158","messageId":"159","endLine":99,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":142,"column":38,"nodeType":"158","messageId":"159","endLine":142,"endColumn":40},{"ruleId":"156","severity":1,"message":"157","line":163,"column":34,"nodeType":"158","messageId":"159","endLine":163,"endColumn":36},{"ruleId":"156","severity":1,"message":"160","line":177,"column":27,"nodeType":"158","messageId":"159","endLine":177,"endColumn":29},{"ruleId":"156","severity":1,"message":"160","line":177,"column":47,"nodeType":"158","messageId":"159","endLine":177,"endColumn":49},{"ruleId":"150","severity":1,"message":"151","line":178,"column":17,"nodeType":"152","endLine":178,"endColumn":41},{"ruleId":"134","severity":1,"message":"161","line":1,"column":50,"nodeType":"136","messageId":"137","endLine":1,"endColumn":61},{"ruleId":"138","severity":1,"message":"162","line":22,"column":6,"nodeType":"140","endLine":22,"endColumn":8,"suggestions":"163"},{"ruleId":"156","severity":1,"message":"160","line":89,"column":26,"nodeType":"158","messageId":"159","endLine":89,"endColumn":28},{"ruleId":"150","severity":1,"message":"151","line":125,"column":15,"nodeType":"152","endLine":132,"endColumn":17},{"ruleId":"156","severity":1,"message":"160","line":175,"column":28,"nodeType":"158","messageId":"159","endLine":175,"endColumn":30},{"ruleId":"134","severity":1,"message":"135","line":7,"column":12,"nodeType":"136","messageId":"137","endLine":7,"endColumn":17},{"ruleId":"150","severity":1,"message":"151","line":58,"column":17,"nodeType":"152","endLine":58,"endColumn":75},{"ruleId":"134","severity":1,"message":"161","line":1,"column":50,"nodeType":"136","messageId":"137","endLine":1,"endColumn":61},{"ruleId":"138","severity":1,"message":"164","line":58,"column":6,"nodeType":"140","endLine":58,"endColumn":13,"suggestions":"165"},{"ruleId":"150","severity":1,"message":"151","line":84,"column":21,"nodeType":"152","endLine":91,"endColumn":25},{"ruleId":"156","severity":1,"message":"160","line":131,"column":28,"nodeType":"158","messageId":"159","endLine":131,"endColumn":30},{"ruleId":"134","severity":1,"message":"153","line":11,"column":18,"nodeType":"136","messageId":"137","endLine":11,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":40,"column":24,"nodeType":"158","messageId":"159","endLine":40,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":67,"column":24,"nodeType":"158","messageId":"159","endLine":67,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":96,"column":24,"nodeType":"158","messageId":"159","endLine":96,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":148,"column":36,"nodeType":"158","messageId":"159","endLine":148,"endColumn":38},{"ruleId":"150","severity":1,"message":"151","line":161,"column":17,"nodeType":"152","endLine":161,"endColumn":41},{"ruleId":"138","severity":1,"message":"166","line":39,"column":8,"nodeType":"140","endLine":39,"endColumn":13,"suggestions":"167"},{"ruleId":"156","severity":1,"message":"160","line":42,"column":18,"nodeType":"158","messageId":"159","endLine":42,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":4,"column":19,"nodeType":"158","messageId":"159","endLine":4,"endColumn":21},{"ruleId":"156","severity":1,"message":"157","line":7,"column":19,"nodeType":"158","messageId":"159","endLine":7,"endColumn":21},{"ruleId":"156","severity":1,"message":"157","line":11,"column":19,"nodeType":"158","messageId":"159","endLine":11,"endColumn":21},{"ruleId":"156","severity":1,"message":"157","line":18,"column":19,"nodeType":"158","messageId":"159","endLine":18,"endColumn":21},{"ruleId":"134","severity":1,"message":"168","line":1,"column":16,"nodeType":"136","messageId":"137","endLine":1,"endColumn":24},{"ruleId":"134","severity":1,"message":"169","line":1,"column":26,"nodeType":"136","messageId":"137","endLine":1,"endColumn":35},{"ruleId":"134","severity":1,"message":"135","line":7,"column":13,"nodeType":"136","messageId":"137","endLine":7,"endColumn":18},{"ruleId":"150","severity":1,"message":"151","line":21,"column":13,"nodeType":"152","endLine":29,"endColumn":15},{"ruleId":"134","severity":1,"message":"170","line":1,"column":38,"nodeType":"136","messageId":"137","endLine":1,"endColumn":47},{"ruleId":"134","severity":1,"message":"171","line":9,"column":23,"nodeType":"136","messageId":"137","endLine":9,"endColumn":27},{"ruleId":"134","severity":1,"message":"135","line":10,"column":13,"nodeType":"136","messageId":"137","endLine":10,"endColumn":18},{"ruleId":"134","severity":1,"message":"153","line":10,"column":20,"nodeType":"136","messageId":"137","endLine":10,"endColumn":28},{"ruleId":"134","severity":1,"message":"170","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"168","line":1,"column":27,"nodeType":"136","messageId":"137","endLine":1,"endColumn":35},{"ruleId":"156","severity":1,"message":"157","line":15,"column":18,"nodeType":"158","messageId":"159","endLine":15,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":24,"column":78,"nodeType":"158","messageId":"159","endLine":24,"endColumn":80},{"ruleId":"156","severity":1,"message":"157","line":27,"column":84,"nodeType":"158","messageId":"159","endLine":27,"endColumn":86},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["174"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["175"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["176","177"],["178","179"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'dispatch' is assigned a value but never used.","'history' is assigned a value but never used.","'useHistory' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useCallback' is defined but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["180"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["181"],"React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["182"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Component' is defined but never used.","'setF' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"messageId":"187","fix":"188","desc":"189"},{"messageId":"190","fix":"191","desc":"192"},{"messageId":"187","fix":"193","desc":"189"},{"messageId":"190","fix":"194","desc":"192"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [dispatch, history]",{"range":"201","text":"202"},"Update the dependencies array to be: [uploadFields, url]",{"range":"203","text":"204"},"removeEscape",{"range":"205","text":"206"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"207","text":"208"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"209","text":"206"},{"range":"210","text":"208"},"Update the dependencies array to be: [userid]",{"range":"211","text":"212"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"213","text":"214"},"Update the dependencies array to be: [body, history, title, url]",{"range":"215","text":"216"},[1091,1093],"[dispatch, history]",[496,501],"[uploadFields, url]",[1036,1037],"",[1036,1036],"\\",[1061,1062],[1061,1061],[705,707],"[userid]",[1728,1735],"[dispatch, image, state]",[1277,1282],"[body, history, title, url]"]