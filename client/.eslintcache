[{"E:\\Y3S1\\322\\The-322Forum\\client\\src\\index.js":"1","E:\\Y3S1\\322\\The-322Forum\\client\\src\\App.js":"2","E:\\Y3S1\\322\\The-322Forum\\client\\src\\reportWebVitals.js":"3","E:\\Y3S1\\322\\The-322Forum\\client\\src\\components\\screens\\Profile.js":"4","E:\\Y3S1\\322\\The-322Forum\\client\\src\\components\\Navbar.js":"5","E:\\Y3S1\\322\\The-322Forum\\client\\src\\components\\screens\\Home.js":"6","E:\\Y3S1\\322\\The-322Forum\\client\\src\\components\\screens\\Signin.js":"7","E:\\Y3S1\\322\\The-322Forum\\client\\src\\components\\screens\\CreatePost.js":"8","E:\\Y3S1\\322\\The-322Forum\\client\\src\\components\\screens\\Signup.js":"9","E:\\Y3S1\\322\\The-322Forum\\client\\src\\reducers\\userReducer.js":"10","E:\\Y3S1\\322\\The-322Forum\\client\\src\\components\\screens\\UserProfile.js":"11","E:\\Y3S1\\322\\The-322Forum\\client\\src\\components\\screens\\FollowingPost.js":"12"},{"size":517,"mtime":1609145712173,"results":"13","hashOfConfig":"14"},{"size":1997,"mtime":1609254563509,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1609145712177,"results":"16","hashOfConfig":"14"},{"size":4121,"mtime":1609309375970,"results":"17","hashOfConfig":"14"},{"size":1578,"mtime":1609254530087,"results":"18","hashOfConfig":"14"},{"size":5740,"mtime":1609231872006,"results":"19","hashOfConfig":"14"},{"size":2504,"mtime":1609145712003,"results":"20","hashOfConfig":"14"},{"size":3223,"mtime":1609145711876,"results":"21","hashOfConfig":"14"},{"size":3400,"mtime":1609307783939,"results":"22","hashOfConfig":"14"},{"size":518,"mtime":1609308758506,"results":"23","hashOfConfig":"14"},{"size":5063,"mtime":1609307462201,"results":"24","hashOfConfig":"14"},{"size":5539,"mtime":1609254391812,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1rxsr7a",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"28"},"E:\\Y3S1\\322\\The-322Forum\\client\\src\\index.js",[],["60","61"],"E:\\Y3S1\\322\\The-322Forum\\client\\src\\App.js",["62","63","64"],"import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport NavBar from \"./components/Navbar\";\r\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\r\nimport Home from \"./components/screens/Home\";\r\nimport Signin from \"./components/screens/Signin\";\r\nimport Profile from \"./components/screens/Profile\";\r\nimport Signup from \"./components/screens/Signup\";\r\nimport UserProfile from \"./components/screens/UserProfile\";\r\nimport CreatePost from \"./components/screens/CreatePost\";\r\nimport FollowingPost from \"./components/screens/FollowingPost\";\r\nimport React, { useEffect, createContext, useReducer, useContext } from \"react\";\r\nimport { reducer, initialState } from \"./reducers/userReducer\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst Routing = () => {\r\n  const history = useHistory();\r\n  const { state, dispatch } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    if (user) {\r\n      //Signed in\r\n      dispatch({ type: \"USER\", payload: user });\r\n    } else {\r\n      //Not signed in\r\n      history.push(\"/signin\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Home />\r\n      </Route>\r\n\r\n      <Route path=\"/signin\">\r\n        <Signin />\r\n      </Route>\r\n\r\n      <Route path=\"/signup\">\r\n        <Signup />\r\n      </Route>\r\n\r\n      <Route path=\"/profile/:userid\">\r\n        <UserProfile />\r\n      </Route>\r\n\r\n      <Route exact path=\"/profile\">\r\n        <Profile />\r\n      </Route>\r\n\r\n      <Route path=\"/create\">\r\n        <CreatePost />\r\n      </Route>\r\n\r\n      <Route path=\"/followingPost\">\r\n        <FollowingPost />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ state, dispatch }}>\r\n      <BrowserRouter>\r\n        <NavBar />\r\n        <Routing />\r\n      </BrowserRouter>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\Y3S1\\322\\The-322Forum\\client\\src\\reportWebVitals.js",[],"E:\\Y3S1\\322\\The-322Forum\\client\\src\\components\\screens\\Profile.js",["65","66","67"],"import React, { useEffect, useState, useContext, useCallback } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nconst Profile = () => {\r\n  const [mypics, setPics] = useState([]);\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(\"/mypost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        setPics(result.mypost);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (image) {\r\n      const data = new FormData();\r\n      data.append(\"file\", image);\r\n      data.append(\"upload_preset\", \"usmforum\");\r\n      data.append(\"clooud_name\", \"dfoc7c90v\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/dfoc7c90v/image/upload\", {\r\n        method: \"post\",\r\n        body: data\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          fetch(\"/updatepic\", {\r\n            method: \"put\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n              pic: data.url\r\n            })\r\n          })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n              console.log(result);\r\n              localStorage.setItem(\r\n                \"user\",\r\n                JSON.stringify({ ...state, pic: result.pic })\r\n              );\r\n              dispatch({ type: \"UPDATEPIC\", payload: result.pic });\r\n              //window.location.reload();\r\n            });\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [image]);\r\n\r\n  const updatePhoto = file => {\r\n    setImage(file);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {state ? (\r\n        <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\r\n          <div\r\n            style={{\r\n              margin: \"18px 0px\",\r\n              borderBottom: \"1px solid grey\"\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\"\r\n              }}\r\n            >\r\n              <div>\r\n                <img\r\n                  style={{\r\n                    width: \"160px\",\r\n                    height: \"160px\",\r\n                    borderRadius: \"80px\"\r\n                  }}\r\n                  src={state ? state.pic : \"loading\"}\r\n                />\r\n              </div>\r\n              <div>\r\n                <h4>{state ? state.name : \"loading\"}</h4>\r\n                <h5>{state ? state.email : \"loading\"}</h5>\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    width: \"108%\"\r\n                  }}\r\n                >\r\n                  <h6>{mypics.length} posts</h6>\r\n                  <h6>{state ? state.followers.length : \"0\"} followers</h6>\r\n                  <h6>{state ? state.following.length : \"0\"} following</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"file-field input-field\" style={{ margin: \"10px\" }}>\r\n              <div className=\"btn #64b5f6 blue darken-1\">\r\n                <span>Update pic</span>\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={e => updatePhoto(e.target.files[0])}\r\n                />\r\n              </div>\r\n              <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"gallery\">\r\n            {mypics.map(item => {\r\n              return (\r\n                <img\r\n                  key={item._id}\r\n                  className=\"item\"\r\n                  src={item.photo}\r\n                  alt={item.title}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h2>Loading....</h2>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","E:\\Y3S1\\322\\The-322Forum\\client\\src\\components\\Navbar.js",[],"E:\\Y3S1\\322\\The-322Forum\\client\\src\\components\\screens\\Home.js",["68","69","70","71","72","73","74","75"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const { state, dispatch } = useContext(UserContext);\r\n  useEffect(() => {\r\n    fetch(\"/allpost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        setData(result.posts);\r\n      });\r\n  }, []);\r\n\r\n  const likePost = id => {\r\n    fetch(\"/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        const newData = data.map(item => {\r\n          console.log(item);\r\n          if (item._id == result._id) {\r\n            console.log(result);\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const unlikePost = id => {\r\n    fetch(\"/unlike\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        //   console.log(result)\r\n        const newData = data.map(item => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const makeComment = (text, postId) => {\r\n    fetch(\"/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        postId,\r\n        text\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        const newData = data.map(item => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deletePost = postid => {\r\n    fetch(`/deletepost/${postid}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        const newData = data.filter(item => {\r\n          return item._id !== result._id;\r\n        });\r\n        setData(newData);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {data.map(item => {\r\n        return (\r\n          <div className=\"card home-card\" key={item._id}>\r\n            <h5 style={{ padding: \"5px\" }}>\r\n              <Link\r\n                to={\r\n                  item.postedBy._id !== state._id\r\n                    ? \"/profile/\" + item.postedBy._id\r\n                    : \"/profile\"\r\n                }\r\n              >\r\n                {item.postedBy.name}\r\n              </Link>{\" \"}\r\n              {item.postedBy._id == state._id && (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  style={{\r\n                    float: \"right\"\r\n                  }}\r\n                  onClick={() => deletePost(item._id)}\r\n                >\r\n                  delete\r\n                </i>\r\n              )}\r\n            </h5>\r\n\r\n            <div className=\"card-image\">\r\n              {item.photo != \"\" && item.photo != \"No photo\" ? (\r\n                <img src={item.photo} />\r\n              ) : (\r\n                <div />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"card-content\">\r\n              <i className=\"material-icons\" style={{ color: \"#64b5f6\" }}>\r\n                favorite\r\n              </i>\r\n              {item.likes.includes(state._id) ? (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  onClick={() => {\r\n                    unlikePost(item._id);\r\n                  }}\r\n                >\r\n                  thumb_down\r\n                </i>\r\n              ) : (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  onClick={() => {\r\n                    likePost(item._id);\r\n                  }}\r\n                >\r\n                  thumb_up\r\n                </i>\r\n              )}\r\n\r\n              <h6>{item.likes.length} likes</h6>\r\n              <h6>{item.title}</h6>\r\n              <p>{item.body}</p>\r\n              {item.comments.map(record => {\r\n                return (\r\n                  <h6 key={record._id}>\r\n                    <span style={{ fontWeight: 500 }}>\r\n                      {record.postedBy.name}\r\n                    </span>{\" \"}\r\n                    {console.log(record.postedBy)}\r\n                    {record.text}\r\n                  </h6>\r\n                );\r\n              })}\r\n              <form\r\n                onSubmit={e => {\r\n                  e.preventDefault();\r\n                  makeComment(e.target[0].value, item._id);\r\n                }}\r\n              >\r\n                <input type=\"text\" placeholder=\"Add a comment\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\Y3S1\\322\\The-322Forum\\client\\src\\components\\screens\\Signin.js",["76"],"import React, {useState, useContext} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Signin = ()=>{\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const PostData = () => {\r\n        if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)){\r\n            M.toast({html: \"Invalid email\"})\r\n            return\r\n        }\r\n        fetch(\"/signin\",{\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n            if(data.error){\r\n                M.toast({html: data.error})\r\n            }\r\n            else{   //Success\r\n                //Store local data\r\n                localStorage.setItem(\"jwt\", data.token) //JWT: Java web token\r\n                localStorage.setItem(\"user\", JSON.stringify(data.user))\r\n                dispatch({type:\"USER\", payload:data.user})\r\n\r\n                M.toast({html:\"Signed in successfully!\"})\r\n                history.push('/')\r\n            }\r\n            console.log(data)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"parentCard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>USMForum</h2>\r\n\r\n                <input type=\"text\" \r\n                placeholder=\"email\"\r\n                value={email}\r\n                onChange={\r\n                    (e)=>setEmail(e.target.value)\r\n                }/>\r\n                \r\n\r\n                <input type=\"password\" \r\n                placeholder=\"password\"\r\n                value={password}\r\n                onChange={\r\n                    (e)=>setPassword(e.target.value)\r\n                }/>\r\n\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\"\r\n                onClick={()=>PostData()}\r\n                >\r\n                    Sign in\r\n                </button>\r\n\r\n                <h6>\r\n                    <Link to=\"/signup\">Don't have an account?</Link>\r\n                </h6>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin","E:\\Y3S1\\322\\The-322Forum\\client\\src\\components\\screens\\CreatePost.js",["77"],"import React, {useState, useEffect} from 'react'\r\nimport M from 'materialize-css'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst CreatePost = () =>{\r\n    const history = useHistory()\r\n    const [title, setTitle] = useState(\"\")\r\n    const [body, setBody] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(\"\")\r\n    \r\n    useEffect(()=>{ //callback to run code after url is set\r\n        if(url){\r\n            fetch(\"/createpost\",{\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic:url\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n                if(data.error){\r\n                    M.toast({html: data.error})\r\n                }\r\n                else{   //Success\r\n                    M.toast({html:\"Created post successfully!\"})\r\n                    history.push('/')\r\n                }\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n    }, [url])\r\n\r\n    const postDetails = () =>{\r\n        const data = new FormData()\r\n        data.append(\"file\", image)\r\n        data.append(\"upload_preset\", \"usmforum\")\r\n        data.append(\"clooud_name\", \"dfoc7c90v\")\r\n        \r\n        fetch(\"https://api.cloudinary.com/v1_1/dfoc7c90v/image/upload\", {\r\n            method:\"post\",\r\n            body: data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(url)\r\n            setUrl(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"card input-filed\"\r\n        style={{\r\n            margin:\"30px auto\",\r\n            maxWidth:\"500px\",\r\n            padding:\"20px\",\r\n            textAlign:\"center\"\r\n        }}\r\n        >\r\n            <input type=\"text\" \r\n                placeholder=\"Title\"\r\n                value={title}\r\n                onChange={\r\n                    (e)=>setTitle(e.target.value)\r\n            }/>\r\n            <input type=\"text\" \r\n                placeholder=\"Body\"\r\n                value={body}\r\n                onChange={\r\n                    (e)=>setBody(e.target.value)\r\n            }/>\r\n\r\n\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\">\r\n                    <span>Attachment</span>\r\n                    <input type=\"file\"\r\n                    onChange={(e)=> setImage(e.target.files[0])}\r\n                    />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue lighten-2\"\r\n            onClick={()=>postDetails()}\r\n            >\r\n                Submit\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost","E:\\Y3S1\\322\\The-322Forum\\client\\src\\components\\screens\\Signup.js",["78","79","80"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\n\r\nconst Signup = () => {\r\n  const history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [url, setUrl] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      uploadFields();\r\n    }\r\n  }, [url]);\r\n\r\n  const uploadPic = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"usmforum\");\r\n    data.append(\"clooud_name\", \"dfoc7c90v\");\r\n    fetch(\"https://api.cloudinary.com/v1_1/dfoc7c90v/image/upload\", {\r\n      method: \"post\",\r\n      body: data\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setUrl(data.url);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const uploadFields = () => {\r\n    if (\r\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n        email\r\n      )\r\n    ) {\r\n      M.toast({ html: \"invalid email\", classes: \"#c62828 red darken-3\" });\r\n      return;\r\n    }\r\n    fetch(\"/signup\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        password,\r\n        email,\r\n        pic: url\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.error) {\r\n          M.toast({ html: data.error, classes: \"#c62828 red darken-3\" });\r\n        } else {\r\n          M.toast({ html: data.message, classes: \"#43a047 green darken-1\" });\r\n          history.push(\"/signin\");\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const PostData = () => {\r\n    if (image) {\r\n      uploadPic();\r\n    } else {\r\n      uploadFields();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"parentCard\">\r\n      <div className=\"card auth-card input-field\">\r\n        <h2>USMForum</h2>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"username\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n        ></input>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"email\"\r\n          value={email}\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <div className=\"file-field input-field\">\r\n          <div className=\"btn #64b5f6 blue darken-1\">\r\n            <span>Upload pic</span>\r\n            <input type=\"file\" onChange={e => setImage(e.target.files[0])} />\r\n          </div>\r\n          <div className=\"file-path-wrapper\">\r\n            <input className=\"file-path validate\" type=\"text\" />\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n          onClick={() => PostData()}\r\n        >\r\n          Sign up\r\n        </button>\r\n\r\n        <h6>\r\n          <Link to=\"/signin\">Already have an account?</Link>\r\n        </h6>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","E:\\Y3S1\\322\\The-322Forum\\client\\src\\reducers\\userReducer.js",["81","82","83","84"],"export const initialState = null;\r\n\r\nexport const reducer = (state, action) => {\r\n  if (action.type == \"USER\") {\r\n    return action.payload;\r\n  }\r\n  if (action.type == \"CLEAR\") {\r\n    //On logout\r\n    return null;\r\n  }\r\n  if (action.type == \"UPDATE\") {\r\n    return {\r\n      ...state,\r\n      followers: action.payload.followers,\r\n      following: action.payload.following\r\n    };\r\n  }\r\n  if (action.type == \"UPDATEPIC\") {\r\n    return {\r\n      ...state,\r\n      pic: action.payload.pic\r\n    };\r\n  }\r\n  return state;\r\n};\r\n","E:\\Y3S1\\322\\The-322Forum\\client\\src\\components\\screens\\UserProfile.js",["85","86","87","88"],"import React, { useEffect, useState, useContext, useCallback } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst UserProfile = () => {\r\n  const [userProfile, setProfile] = useState(null);\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const { userid } = useParams();\r\n  const [showfollow, setShowFollow] = useState(\r\n    state ? !state.following.includes(userid) : true\r\n  );\r\n  useEffect(() => {\r\n    fetch(`/user/${userid}`, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        setProfile(result);\r\n      });\r\n  }, []);\r\n\r\n  const followUser = () => {\r\n    console.log(userid);\r\n    fetch(\"/follow\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        followId: userid\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        dispatch({\r\n          type: \"UPDATE\",\r\n          payload: { following: data.following, followers: data.followers }\r\n        });\r\n        localStorage.setItem(\"user\", JSON.stringify(data));\r\n        dispatch({\r\n          type: \"UPDATE\",\r\n          payload: { following: data.following, followers: data.followers }\r\n        });\r\n        localStorage.setItem(\"user\", JSON.stringify(data));\r\n        setProfile(prevState => {\r\n          return {\r\n            ...prevState,\r\n            user: {\r\n              ...prevState.user,\r\n              followers: [...prevState.user.followers, data._id]\r\n            }\r\n          };\r\n        });\r\n        setShowFollow(false);\r\n      });\r\n  };\r\n\r\n  const unfollowUser = () => {\r\n    fetch(\"/unfollow\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        unfollowId: userid\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        dispatch({\r\n          type: \"UPDATE\",\r\n          payload: { following: data.following, followers: data.followers }\r\n        });\r\n        localStorage.setItem(\"user\", JSON.stringify(data));\r\n\r\n        setProfile(prevState => {\r\n          const newFollower = prevState.user.followers.filter(\r\n            item => item != data._id\r\n          );\r\n          return {\r\n            ...prevState,\r\n            user: {\r\n              ...prevState.user,\r\n              followers: newFollower\r\n            }\r\n          };\r\n        });\r\n        setShowFollow(true);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {userProfile ? (\r\n        <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-around\",\r\n              margin: \"18px 0px\",\r\n              borderBottom: \"1px solid grey\"\r\n            }}\r\n          >\r\n            <div>\r\n              <img\r\n                style={{\r\n                  width: \"150px\",\r\n                  height: \"150px\",\r\n                  borderRadius: \"75px\"\r\n                }}\r\n                src={userProfile.user.pic}\r\n              />\r\n            </div>\r\n            <div>\r\n              <h4>{userProfile.user.name}</h4>\r\n              <h4>{userProfile.user.email}</h4>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  width: \"106%\"\r\n                }}\r\n              >\r\n                <h6>{userProfile.posts.length} posts</h6>\r\n                <h6>{userProfile.user.followers.length} followers</h6>\r\n                <h6>{userProfile.user.following.length} following</h6>\r\n              </div>\r\n              {showfollow ? (\r\n                <button\r\n                  style={{\r\n                    margin: \"10px\"\r\n                  }}\r\n                  className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                  onClick={() => followUser()}\r\n                >\r\n                  Follow\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  style={{\r\n                    margin: \"10px\"\r\n                  }}\r\n                  className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                  onClick={() => unfollowUser()}\r\n                >\r\n                  UnFollow\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"gallery\">\r\n            {userProfile.posts.map(item => {\r\n              return (\r\n                <img\r\n                  key={item._id}\r\n                  className=\"item\"\r\n                  src={item.photo}\r\n                  alt={item.title}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h2>Loading...</h2>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","E:\\Y3S1\\322\\The-322Forum\\client\\src\\components\\screens\\FollowingPost.js",["89","90","91","92","93","94"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport { Link } from \"react-router-dom\";\r\nconst FollowingPost = () => {\r\n  const [data, setData] = useState([]);\r\n  const { state, dispatch } = useContext(UserContext);\r\n  useEffect(() => {\r\n    fetch(\"/followingpost\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        setData(result.posts);\r\n      });\r\n  }, []);\r\n\r\n  const likePost = id => {\r\n    fetch(\"/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        //   console.log(result)\r\n        const newData = data.map(item => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const unlikePost = id => {\r\n    fetch(\"/unlike\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        //   console.log(result)\r\n        const newData = data.map(item => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const makeComment = (text, postId) => {\r\n    fetch(\"/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      },\r\n      body: JSON.stringify({\r\n        postId,\r\n        text\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        const newData = data.map(item => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deletePost = postid => {\r\n    fetch(`/deletepost/${postid}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\r\n      }\r\n    })\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        console.log(result);\r\n        const newData = data.filter(item => {\r\n          return item._id !== result._id;\r\n        });\r\n        setData(newData);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"home\">\r\n      {data.map(item => {\r\n        return (\r\n          <div className=\"card home-card\" key={item._id}>\r\n            <h5 style={{ padding: \"5px\" }}>\r\n              <Link\r\n                to={\r\n                  item.postedBy._id !== state._id\r\n                    ? \"/profile/\" + item.postedBy._id\r\n                    : \"/profile\"\r\n                }\r\n              >\r\n                {item.postedBy.name}\r\n              </Link>{\" \"}\r\n              {item.postedBy._id == state._id && (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  style={{\r\n                    float: \"right\"\r\n                  }}\r\n                  onClick={() => deletePost(item._id)}\r\n                >\r\n                  delete\r\n                </i>\r\n              )}\r\n            </h5>\r\n            <div className=\"card-image\">\r\n              <img src={item.photo} />\r\n            </div>\r\n            <div className=\"card-content\">\r\n              <i className=\"material-icons\" style={{ color: \"red\" }}>\r\n                favorite\r\n              </i>\r\n              {item.likes.includes(state._id) ? (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  onClick={() => {\r\n                    unlikePost(item._id);\r\n                  }}\r\n                >\r\n                  thumb_down\r\n                </i>\r\n              ) : (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  onClick={() => {\r\n                    likePost(item._id);\r\n                  }}\r\n                >\r\n                  thumb_up\r\n                </i>\r\n              )}\r\n\r\n              <h6>{item.likes.length} likes</h6>\r\n              <h6>{item.title}</h6>\r\n              <p>{item.body}</p>\r\n              {item.comments.map(record => {\r\n                return (\r\n                  <h6 key={record._id}>\r\n                    <span style={{ fontWeight: \"500\" }}>\r\n                      {record.postedBy.name}\r\n                    </span>{\" \"}\r\n                    {record.text}\r\n                  </h6>\r\n                );\r\n              })}\r\n              <form\r\n                onSubmit={e => {\r\n                  e.preventDefault();\r\n                  makeComment(e.target[0].value, item._id);\r\n                }}\r\n              >\r\n                <input type=\"text\" placeholder=\"add a comment\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FollowingPost;\r\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":8,"nodeType":"101","messageId":"102","endLine":1,"endColumn":12},{"ruleId":"99","severity":1,"message":"103","line":19,"column":11,"nodeType":"101","messageId":"102","endLine":19,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":31,"column":6,"nodeType":"106","endLine":31,"endColumn":8,"suggestions":"107"},{"ruleId":"99","severity":1,"message":"108","line":1,"column":50,"nodeType":"101","messageId":"102","endLine":1,"endColumn":61},{"ruleId":"104","severity":1,"message":"109","line":58,"column":6,"nodeType":"106","endLine":58,"endColumn":13,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":81,"column":17,"nodeType":"113","endLine":88,"endColumn":19},{"ruleId":"99","severity":1,"message":"114","line":7,"column":18,"nodeType":"101","messageId":"102","endLine":7,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":36,"column":24,"nodeType":"117","messageId":"118","endLine":36,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":65,"column":24,"nodeType":"117","messageId":"118","endLine":65,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":94,"column":24,"nodeType":"117","messageId":"118","endLine":94,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":139,"column":34,"nodeType":"117","messageId":"118","endLine":139,"endColumn":36},{"ruleId":"115","severity":1,"message":"119","line":153,"column":27,"nodeType":"117","messageId":"118","endLine":153,"endColumn":29},{"ruleId":"115","severity":1,"message":"119","line":153,"column":47,"nodeType":"117","messageId":"118","endLine":153,"endColumn":49},{"ruleId":"111","severity":1,"message":"112","line":154,"column":17,"nodeType":"113","endLine":154,"endColumn":41},{"ruleId":"99","severity":1,"message":"103","line":7,"column":12,"nodeType":"101","messageId":"102","endLine":7,"endColumn":17},{"ruleId":"104","severity":1,"message":"120","line":39,"column":8,"nodeType":"106","endLine":39,"endColumn":13,"suggestions":"121"},{"ruleId":"104","severity":1,"message":"122","line":17,"column":6,"nodeType":"106","endLine":17,"endColumn":11,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":39,"column":18,"nodeType":"126","messageId":"127","endLine":39,"endColumn":19,"suggestions":"128"},{"ruleId":"124","severity":1,"message":"125","line":39,"column":43,"nodeType":"126","messageId":"127","endLine":39,"endColumn":44,"suggestions":"129"},{"ruleId":"115","severity":1,"message":"116","line":4,"column":19,"nodeType":"117","messageId":"118","endLine":4,"endColumn":21},{"ruleId":"115","severity":1,"message":"116","line":7,"column":19,"nodeType":"117","messageId":"118","endLine":7,"endColumn":21},{"ruleId":"115","severity":1,"message":"116","line":11,"column":19,"nodeType":"117","messageId":"118","endLine":11,"endColumn":21},{"ruleId":"115","severity":1,"message":"116","line":18,"column":19,"nodeType":"117","messageId":"118","endLine":18,"endColumn":21},{"ruleId":"99","severity":1,"message":"108","line":1,"column":50,"nodeType":"101","messageId":"102","endLine":1,"endColumn":61},{"ruleId":"104","severity":1,"message":"130","line":22,"column":6,"nodeType":"106","endLine":22,"endColumn":8,"suggestions":"131"},{"ruleId":"115","severity":1,"message":"119","line":82,"column":26,"nodeType":"117","messageId":"118","endLine":82,"endColumn":28},{"ruleId":"111","severity":1,"message":"112","line":109,"column":15,"nodeType":"113","endLine":116,"endColumn":17},{"ruleId":"99","severity":1,"message":"114","line":6,"column":18,"nodeType":"101","messageId":"102","endLine":6,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":35,"column":24,"nodeType":"117","messageId":"118","endLine":35,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":62,"column":24,"nodeType":"117","messageId":"118","endLine":62,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":91,"column":24,"nodeType":"117","messageId":"118","endLine":91,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":135,"column":34,"nodeType":"117","messageId":"118","endLine":135,"endColumn":36},{"ruleId":"111","severity":1,"message":"112","line":148,"column":15,"nodeType":"113","endLine":148,"endColumn":39},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["134"],"'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["135"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["136"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["137"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["138","139"],["140","141"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"messageId":"151","fix":"152","desc":"153"},{"messageId":"154","fix":"155","desc":"156"},{"messageId":"151","fix":"157","desc":"153"},{"messageId":"154","fix":"158","desc":"156"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [dispatch, history]",{"range":"161","text":"162"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"163","text":"164"},"Update the dependencies array to be: [body, history, title, url]",{"range":"165","text":"166"},"Update the dependencies array to be: [uploadFields, url]",{"range":"167","text":"168"},"removeEscape",{"range":"169","text":"170"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"171","text":"172"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"173","text":"170"},{"range":"174","text":"172"},"Update the dependencies array to be: [userid]",{"range":"175","text":"176"},[1123,1125],"[dispatch, history]",[1728,1735],"[dispatch, image, state]",[1277,1282],"[body, history, title, url]",[496,501],"[uploadFields, url]",[1036,1037],"",[1036,1036],"\\",[1061,1062],[1061,1061],[705,707],"[userid]"]